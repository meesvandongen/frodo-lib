// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AgentApi deleteAgentByTypeAndId() 1: Delete IdentityGatewayAgent 'FrodoTestGatewayAgent3' 1`] = `
{
  "_id": "FrodoTestGatewayAgent3",
  "_rev": "899690511",
  "_type": {
    "_id": "IdentityGatewayAgent",
    "collection": true,
    "name": "Identity Gateway Agents",
  },
  "igCdssoRedirectUrls": {
    "inherited": false,
    "value": [],
  },
  "igTokenIntrospection": {
    "inherited": false,
    "value": "Realm_Subs",
  },
  "status": {
    "inherited": false,
    "value": "Active",
  },
}
`;

exports[`AgentApi deleteAgentByTypeAndId() 2: Delete J2EEAgent 'FrodoTestJavaAgent3' 1`] = `
{
  "_id": "FrodoTestJavaAgent3",
  "_rev": "-1750716182",
  "_type": {
    "_id": "J2EEAgent",
    "collection": true,
    "name": "J2EE Agents",
  },
  "advancedJ2EEAgentConfig": {
    "alternativeAgentHostname": {
      "inherited": false,
    },
    "alternativeAgentPort": {
      "inherited": false,
    },
    "alternativeAgentProtocol": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "expiredSessionCacheSize": {
      "inherited": false,
      "value": 500,
    },
    "expiredSessionCacheTTL": {
      "inherited": false,
      "value": 20,
    },
    "fragmentRelayUri": {
      "inherited": false,
    },
    "idleTimeRefreshWindow": {
      "inherited": false,
      "value": 1,
    },
    "jwtCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "jwtCacheTTL": {
      "inherited": false,
      "value": 30,
    },
    "missingPostDataPreservationEntryUri": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "monitoringToCSV": {
      "inherited": false,
      "value": false,
    },
    "policyCachePerUser": {
      "inherited": false,
      "value": 50,
    },
    "policyCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "policyClientPollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "possibleXssCodeElements": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "postDataCacheTtlMin": {
      "inherited": false,
      "value": 5,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "postDataPreserveCacheEntryMaxEntries": {
      "inherited": false,
      "value": 1000,
    },
    "postDataPreserveCacheEntryMaxTotalSizeMb": {
      "inherited": false,
      "value": -1,
    },
    "postDataStickySessionKeyValue": {
      "inherited": false,
    },
    "postDataStickySessionMode": {
      "inherited": false,
      "value": "URL",
    },
    "sessionCacheTTL": {
      "inherited": false,
      "value": 15,
    },
    "ssoExchangeCacheSize": {
      "inherited": false,
      "value": 100,
    },
    "ssoExchangeCacheTTL": {
      "inherited": false,
      "value": 5,
    },
    "xssDetectionRedirectUri": {
      "inherited": false,
      "value": {},
    },
  },
  "amServicesJ2EEAgent": {
    "agentAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "amLoginUrl": {
      "inherited": false,
      "value": [],
    },
    "authServiceHost": {
      "inherited": false,
      "value": "openam-volker-dev.forgeblocks.com",
    },
    "authServicePort": {
      "inherited": false,
      "value": 443,
    },
    "authServiceProtocol": {
      "inherited": false,
      "value": "https",
    },
    "authSuccessRedirectUrl": {
      "inherited": false,
      "value": false,
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "|?realm=/alpha",
      ],
    },
    "conditionalLogoutUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "customLoginEnabled": {
      "inherited": false,
      "value": false,
    },
    "legacyLoginUrlList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "overridePolicyEvaluationRealmEnabled": {
      "inherited": false,
      "value": false,
    },
    "policyEvaluationApplication": {
      "inherited": false,
      "value": "apps",
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/alpha",
    },
    "policyNotifications": {
      "inherited": false,
      "value": true,
    },
    "restrictToRealm": {
      "inherited": false,
      "value": {},
    },
    "urlPolicyEnvGetParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvJsessionParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvPostParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "applicationJ2EEAgentConfig": {
    "applicationLogoutUris": {
      "inherited": false,
      "value": {},
    },
    "clientIpValidationMode": {
      "inherited": false,
      "value": {
        "": "OFF",
      },
    },
    "clientIpValidationRange": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "cookieAttributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "cookieAttributeUrlEncoded": {
      "inherited": false,
      "value": true,
    },
    "headerAttributeDateFormat": {
      "inherited": false,
      "value": "EEE, d MMM yyyy hh:mm:ss z",
    },
    "invertNotEnforcedIps": {
      "inherited": false,
      "value": false,
    },
    "invertNotEnforcedUris": {
      "inherited": false,
      "value": false,
    },
    "logoutEntryUri": {
      "inherited": false,
      "value": {},
    },
    "logoutIntrospection": {
      "inherited": false,
      "value": false,
    },
    "logoutRequestParameters": {
      "inherited": false,
      "value": {},
    },
    "notEnforcedFavicon": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIpsCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "notEnforcedRuleCompoundSeparator": {
      "inherited": false,
      "value": "|",
    },
    "notEnforcedUris": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedUrisCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedUrisCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "resourceAccessDeniedUri": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalJ2EEAgentConfig": {
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": false,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_NONE",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "ALL",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=http://localhost:8080/",
        "agentRootURL=https://apps2.mytestrun.com:443/",
      ],
    },
    "configurationReloadInterval": {
      "inherited": false,
      "value": 10,
    },
    "customResponseHeader": {
      "inherited": false,
      "value": {},
    },
    "debugLevel": {
      "inherited": false,
      "value": "message",
    },
    "debugLogfilePrefix": {
      "inherited": false,
    },
    "debugLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationMinutes": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "debugLogfileSuffix": {
      "inherited": false,
      "value": "-yyyy.MM.dd-HH.mm.ss",
    },
    "filterMode": {
      "inherited": false,
      "value": {
        "": "URL_POLICY",
      },
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "apps2.mytestrun.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "httpSessionBinding": {
      "inherited": false,
      "value": true,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "lbCookieEnabled": {
      "inherited": false,
      "value": false,
    },
    "lbCookieName": {
      "inherited": false,
      "value": "amlbcookie",
    },
    "localAuditLogRotation": {
      "inherited": false,
      "value": false,
    },
    "localAuditLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "localAuditRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "loginAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "loginAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterParam",
    },
    "preAuthCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "preAuthCookieName": {
      "inherited": false,
      "value": "amFilterCDSSORequest",
    },
    "recheckAmUnavailabilityInSeconds": {
      "inherited": false,
      "value": 5,
    },
    "redirectAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "redirectAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterRDParam",
    },
    "repositoryLocation": "centralized",
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "userAttributeName": {
      "inherited": false,
      "value": "uid",
    },
    "userMappingMode": {
      "inherited": false,
      "value": "USER_ID",
    },
    "userPrincipalFlag": {
      "inherited": false,
      "value": false,
    },
    "userTokenName": {
      "inherited": false,
      "value": "UserToken",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscJ2EEAgentConfig": {
    "agent302RedirectContentType": {
      "inherited": false,
      "value": "application/json",
    },
    "agent302RedirectEnabled": {
      "inherited": false,
      "value": true,
    },
    "agent302RedirectHttpData": {
      "inherited": false,
      "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
    },
    "agent302RedirectInvertEnabled": {
      "inherited": false,
      "value": false,
    },
    "agent302RedirectNerList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "agent302RedirectStatusCode": {
      "inherited": false,
      "value": 200,
    },
    "authFailReasonParameterName": {
      "inherited": false,
    },
    "authFailReasonParameterRemapper": {
      "inherited": false,
      "value": {},
    },
    "authFailReasonUrl": {
      "inherited": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "gotoUrl": {
      "inherited": false,
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "legacyRedirectUri": {
      "inherited": false,
      "value": "/app1/sunwLegacySupportURI",
    },
    "legacyUserAgentList": {
      "inherited": false,
      "value": [
        "Mozilla/4.7*",
      ],
    },
    "legacyUserAgentSupport": {
      "inherited": false,
      "value": false,
    },
    "localeCountry": {
      "inherited": false,
      "value": "US",
    },
    "localeLanguage": {
      "inherited": false,
      "value": "en",
    },
    "loginReasonMap": {
      "inherited": false,
      "value": {},
    },
    "loginReasonParameterName": {
      "inherited": false,
    },
    "portCheckEnabled": {
      "inherited": false,
      "value": false,
    },
    "portCheckFile": {
      "inherited": false,
      "value": "PortCheckContent.txt",
    },
    "portCheckSetting": {
      "inherited": false,
      "value": {
        "443": "https",
      },
    },
    "unwantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "unwantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoJ2EEAgentConfig": {
    "acceptIPDPCookie": {
      "inherited": false,
      "value": false,
    },
    "acceptSsoTokenDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "acceptSsoTokenEnabled": {
      "inherited": false,
      "value": false,
    },
    "authExchangeCookieName": {
      "inherited": false,
    },
    "authExchangeUri": {
      "inherited": false,
    },
    "cdssoDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "/agentapp/post-authn-redirect",
    },
    "cdssoSecureCookies": {
      "inherited": false,
      "value": false,
    },
    "cookieResetDomains": {
      "inherited": false,
      "value": {},
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetNames": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetPaths": {
      "inherited": false,
      "value": {},
    },
    "encodeCookies": {
      "inherited": false,
      "value": false,
    },
    "excludedUserAgentsList": {
      "inherited": false,
      "value": [],
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "setCookieAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "setCookieInternalMap": {
      "inherited": false,
      "value": {},
    },
  },
}
`;

exports[`AgentApi deleteAgentByTypeAndId() 3: Delete WebAgent 'FrodoTestWebAgent3' 1`] = `
{
  "_id": "FrodoTestWebAgent3",
  "_rev": "528305929",
  "_type": {
    "_id": "WebAgent",
    "collection": true,
    "name": "Web Agents",
  },
  "advancedWebAgentConfig": {
    "apacheAuthDirectives": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "fragmentRedirectEnabled": {
      "inherited": false,
      "value": false,
    },
    "hostnameToIpAddress": {
      "inherited": false,
      "value": [],
    },
    "logonAndImpersonation": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestHost": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestPort": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestProtocol": {
      "inherited": false,
      "value": false,
    },
    "pdpJavascriptRepost": {
      "inherited": false,
      "value": false,
    },
    "pdpSkipPostUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "pdpStickySessionCookieName": {
      "inherited": false,
    },
    "pdpStickySessionMode": {
      "inherited": false,
      "value": "OFF",
    },
    "pdpStickySessionValue": {
      "inherited": false,
    },
    "postDataCachePeriod": {
      "inherited": false,
      "value": 10,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "replayPasswordKey": {
      "inherited": false,
    },
    "retainSessionCache": {
      "inherited": false,
      "value": false,
    },
    "showPasswordInHeader": {
      "inherited": false,
      "value": false,
    },
  },
  "amServicesWebAgent": {
    "amLoginUrl": {
      "inherited": false,
      "value": [],
    },
    "amLogoutUrl": {
      "inherited": false,
      "value": [
        "https://openam-volker-dev.forgeblocks.com:443/am/UI/Logout",
      ],
    },
    "applicationLogoutUrls": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "|https://openam-volker-dev.forgeblocks.com:443/am/oauth2/authorize?realm=/alpha",
      ],
    },
    "customLoginMode": {
      "inherited": false,
      "value": 0,
    },
    "enableLogoutRegex": {
      "inherited": false,
      "value": false,
    },
    "fetchPoliciesFromRootResource": {
      "inherited": false,
      "value": false,
    },
    "invalidateLogoutSession": {
      "inherited": false,
      "value": true,
    },
    "logoutRedirectDisabled": {
      "inherited": false,
      "value": false,
    },
    "logoutRedirectUrl": {
      "inherited": false,
    },
    "logoutResetCookies": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "logoutUrlRegex": {
      "inherited": false,
    },
    "policyCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "policyClockSkew": {
      "inherited": false,
      "value": 0,
    },
    "policyEvaluationApplication": {
      "inherited": false,
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/alpha",
    },
    "publicAmUrl": {
      "inherited": false,
    },
    "regexConditionalLoginPattern": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "regexConditionalLoginUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "retrieveClientHostname": {
      "inherited": false,
      "value": false,
    },
    "ssoCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "userIdParameter": {
      "inherited": false,
      "value": "UserToken",
    },
    "userIdParameterType": {
      "inherited": false,
      "value": "session",
    },
  },
  "applicationWebAgentConfig": {
    "attributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "clientIpValidation": {
      "inherited": false,
      "value": false,
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "fetchAttributesForNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "ignorePathInfoForNotEnforcedUrls": {
      "inherited": false,
      "value": true,
    },
    "invertNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsRegex": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedUrls": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedUrlsRegex": {
      "inherited": false,
      "value": false,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalWebAgentConfig": {
    "accessDeniedUrl": {
      "inherited": false,
    },
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "agentDebugLevel": {
      "inherited": false,
      "value": "Error",
    },
    "agentUriPrefix": {
      "inherited": false,
      "value": "https://www.mytestrun.com:443/amagent",
    },
    "amLbCookieEnable": {
      "inherited": false,
      "value": false,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_NONE",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "REMOTE",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=https://www.mytestrun.com:443/",
      ],
    },
    "configurationPollingInterval": {
      "inherited": false,
      "value": 60,
    },
    "disableJwtAudit": {
      "inherited": false,
      "value": false,
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "www.mytestrun.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "jwtAuditWhitelist": {
      "inherited": false,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "notificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "repositoryLocation": "centralized",
    "resetIdleTime": {
      "inherited": false,
      "value": false,
    },
    "ssoOnlyMode": {
      "inherited": false,
      "value": false,
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscWebAgentConfig": {
    "addCacheControlHeader": {
      "inherited": false,
      "value": false,
    },
    "anonymousUserEnabled": {
      "inherited": false,
      "value": false,
    },
    "anonymousUserId": {
      "inherited": false,
      "value": "anonymous",
    },
    "caseInsensitiveUrlComparison": {
      "inherited": false,
      "value": true,
    },
    "compositeAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "compositeAdviceRedirect": {
      "inherited": false,
      "value": false,
    },
    "encodeSpecialCharsInCookies": {
      "inherited": false,
      "value": false,
    },
    "encodeUrlSpecialCharacters": {
      "inherited": false,
      "value": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "headerJsonResponse": {
      "inherited": false,
      "value": {},
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "invalidUrlRegex": {
      "inherited": false,
    },
    "invertUrlJsonResponse": {
      "inherited": false,
      "value": false,
    },
    "mineEncodeHeader": {
      "inherited": false,
      "value": 0,
    },
    "profileAttributesCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "profileAttributesCookiePrefix": {
      "inherited": false,
      "value": "HTTP_",
    },
    "statusCodeJsonResponse": {
      "inherited": false,
      "value": 202,
    },
    "urlJsonResponse": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoWebAgentConfig": {
    "acceptSsoToken": {
      "inherited": false,
      "value": false,
    },
    "cdssoCookieDomain": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "agent/cdsso-oauth2",
    },
    "cookieName": {
      "inherited": false,
      "value": "iPlanetDirectoryPro",
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetOnRedirect": {
      "inherited": false,
      "value": false,
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "multivaluePreAuthnCookie": {
      "inherited": false,
      "value": false,
    },
    "persistentJwtCookie": {
      "inherited": false,
      "value": false,
    },
    "sameSite": {
      "inherited": false,
    },
    "secureCookies": {
      "inherited": false,
      "value": false,
    },
  },
}
`;

exports[`AgentApi findAgentById() 1: Find agent 'FrodoTestGatewayAgent1' 1`] = `
[
  {
    "_id": "FrodoTestGatewayAgent1",
    "_rev": "-257048881",
    "_type": "IdentityGatewayAgent",
    "agentgroup": null,
    "igCdssoRedirectUrls": [
      "https://ig.mytestrun.com/expanse/cdsso/redirect",
      "https://ig.mytestrun.com/ig/cdsso/redirect",
      "https://ig.scheuber.io/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/grafana/cdsso/redirect",
      "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
      "https://ig.mytestrun.com/bi/cdsso/redirect",
      "https://ig.mytestrun.com/prometheus/cdsso/redirect",
      "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/forgerock/cdsso/redirect",
    ],
    "igTokenIntrospection": "Realm_Subs",
    "status": "Active",
    "userpassword": null,
  },
]
`;

exports[`AgentApi findAgentById() 2: Find agent 'FrodoTestJavaAgent1' 1`] = `
[
  {
    "_id": "FrodoTestJavaAgent1",
    "_rev": "-1714938671",
    "_type": "J2EEAgent",
    "advancedJ2EEAgentConfig": {
      "alternativeAgentHostname": null,
      "alternativeAgentPort": null,
      "alternativeAgentProtocol": null,
      "clientHostnameHeader": null,
      "clientIpHeader": null,
      "customProperties": [],
      "expiredSessionCacheSize": 500,
      "expiredSessionCacheTTL": 20,
      "fragmentRelayUri": null,
      "idleTimeRefreshWindow": 1,
      "jwtCacheSize": 5000,
      "jwtCacheTTL": 30,
      "missingPostDataPreservationEntryUri": [
        "",
      ],
      "monitoringToCSV": false,
      "policyCachePerUser": 50,
      "policyCacheSize": 5000,
      "policyClientPollingInterval": 3,
      "possibleXssCodeElements": [
        "",
      ],
      "postDataCacheTtlMin": 5,
      "postDataPreservation": false,
      "postDataPreserveCacheEntryMaxEntries": 1000,
      "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
      "postDataStickySessionKeyValue": null,
      "postDataStickySessionMode": "URL",
      "sessionCacheTTL": 15,
      "ssoExchangeCacheSize": 100,
      "ssoExchangeCacheTTL": 5,
      "xssDetectionRedirectUri": {},
    },
    "amServicesJ2EEAgent": {
      "agentAdviceEncode": false,
      "amLoginUrl": [],
      "authServiceHost": "openam-volker-dev.forgeblocks.com",
      "authServicePort": 443,
      "authServiceProtocol": "https",
      "authSuccessRedirectUrl": false,
      "conditionalLoginUrl": [
        "",
      ],
      "conditionalLogoutUrl": [
        "",
      ],
      "customLoginEnabled": false,
      "legacyLoginUrlList": [
        "",
      ],
      "overridePolicyEvaluationRealmEnabled": false,
      "policyEvaluationApplication": "iPlanetAMWebAgentService",
      "policyEvaluationRealm": "/",
      "policyNotifications": true,
      "restrictToRealm": {},
      "urlPolicyEnvGetParameters": [
        "",
      ],
      "urlPolicyEnvJsessionParameters": [
        "",
      ],
      "urlPolicyEnvPostParameters": [
        "",
      ],
    },
    "applicationJ2EEAgentConfig": {
      "applicationLogoutUris": {},
      "clientIpValidationMode": {
        "": "OFF",
      },
      "clientIpValidationRange": {},
      "continuousSecurityCookies": {},
      "continuousSecurityHeaders": {},
      "cookieAttributeMultiValueSeparator": "|",
      "cookieAttributeUrlEncoded": true,
      "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
      "invertNotEnforcedIps": false,
      "invertNotEnforcedUris": false,
      "logoutEntryUri": {},
      "logoutIntrospection": false,
      "logoutRequestParameters": {},
      "notEnforcedFavicon": true,
      "notEnforcedIps": [
        "",
      ],
      "notEnforcedIpsCacheEnabled": true,
      "notEnforcedIpsCacheSize": 1000,
      "notEnforcedRuleCompoundSeparator": "|",
      "notEnforcedUris": [
        "",
      ],
      "notEnforcedUrisCacheEnabled": true,
      "notEnforcedUrisCacheSize": 1000,
      "profileAttributeFetchMode": "NONE",
      "profileAttributeMap": {},
      "resourceAccessDeniedUri": {},
      "responseAttributeFetchMode": "NONE",
      "responseAttributeMap": {},
      "sessionAttributeFetchMode": "NONE",
      "sessionAttributeMap": {},
    },
    "globalJ2EEAgentConfig": {
      "agentConfigChangeNotificationsEnabled": true,
      "agentgroup": null,
      "auditAccessType": "LOG_NONE",
      "auditLogLocation": "REMOTE",
      "cdssoRootUrl": [
        "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
      ],
      "configurationReloadInterval": 0,
      "customResponseHeader": {},
      "debugLevel": "error",
      "debugLogfilePrefix": null,
      "debugLogfileRetentionCount": -1,
      "debugLogfileRotationMinutes": -1,
      "debugLogfileRotationSize": 52428800,
      "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
      "filterMode": {
        "": "ALL",
      },
      "fqdnCheck": false,
      "fqdnDefault": "openam-volker-dev.forgeblocks.com",
      "fqdnMapping": {},
      "httpSessionBinding": true,
      "jwtName": "am-auth-jwt",
      "lbCookieEnabled": false,
      "lbCookieName": "amlbcookie",
      "localAuditLogRotation": false,
      "localAuditLogfileRetentionCount": -1,
      "localAuditRotationSize": 52428800,
      "loginAttemptLimit": 0,
      "loginAttemptLimitCookieName": "amFilterParam",
      "preAuthCookieMaxAge": 300,
      "preAuthCookieName": "amFilterCDSSORequest",
      "recheckAmUnavailabilityInSeconds": 5,
      "redirectAttemptLimit": 0,
      "redirectAttemptLimitCookieName": "amFilterRDParam",
      "repositoryLocation": "centralized",
      "status": "Active",
      "userAttributeName": "employeenumber",
      "userMappingMode": "USER_ID",
      "userPrincipalFlag": false,
      "userTokenName": "UserToken",
      "userpassword": null,
      "webSocketConnectionIntervalInMinutes": 30,
    },
    "miscJ2EEAgentConfig": {
      "agent302RedirectContentType": "application/json",
      "agent302RedirectEnabled": true,
      "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
      "agent302RedirectInvertEnabled": false,
      "agent302RedirectNerList": [
        "",
      ],
      "agent302RedirectStatusCode": 200,
      "authFailReasonParameterName": null,
      "authFailReasonParameterRemapper": {},
      "authFailReasonUrl": null,
      "gotoParameterName": "goto",
      "gotoUrl": null,
      "ignorePathInfo": false,
      "legacyRedirectUri": "/agent/sunwLegacySupportURI",
      "legacyUserAgentList": [
        "Mozilla/4.7*",
      ],
      "legacyUserAgentSupport": false,
      "localeCountry": "US",
      "localeLanguage": "en",
      "loginReasonMap": {},
      "loginReasonParameterName": null,
      "portCheckEnabled": false,
      "portCheckFile": "PortCheckContent.txt",
      "portCheckSetting": {
        "443": "https",
      },
      "unwantedHttpUrlParams": [
        "",
      ],
      "unwantedHttpUrlRegexParams": [
        "",
      ],
      "wantedHttpUrlParams": [
        "",
      ],
      "wantedHttpUrlRegexParams": [
        "",
      ],
    },
    "ssoJ2EEAgentConfig": {
      "acceptIPDPCookie": false,
      "acceptSsoTokenDomainList": [
        "",
      ],
      "acceptSsoTokenEnabled": false,
      "authExchangeCookieName": null,
      "authExchangeUri": null,
      "cdssoDomainList": [
        "",
      ],
      "cdssoRedirectUri": "/agent/post-authn-redirect",
      "cdssoSecureCookies": false,
      "cookieResetDomains": {},
      "cookieResetEnabled": false,
      "cookieResetNames": [
        "",
      ],
      "cookieResetPaths": {},
      "encodeCookies": false,
      "excludedUserAgentsList": [],
      "httpOnly": true,
      "setCookieAttributeMap": {},
      "setCookieInternalMap": {},
    },
  },
]
`;

exports[`AgentApi findAgentById() 3: Find agent 'FrodoTestWebAgent1' 1`] = `
[
  {
    "_id": "FrodoTestWebAgent1",
    "_rev": "-174245863",
    "_type": "WebAgent",
    "advancedWebAgentConfig": {
      "apacheAuthDirectives": null,
      "clientHostnameHeader": null,
      "clientIpHeader": null,
      "customProperties": [],
      "fragmentRedirectEnabled": false,
      "hostnameToIpAddress": [],
      "logonAndImpersonation": false,
      "overrideRequestHost": true,
      "overrideRequestPort": true,
      "overrideRequestProtocol": true,
      "pdpJavascriptRepost": false,
      "pdpSkipPostUrl": [
        "",
      ],
      "pdpStickySessionCookieName": null,
      "pdpStickySessionMode": "OFF",
      "pdpStickySessionValue": null,
      "postDataCachePeriod": 10,
      "postDataPreservation": false,
      "replayPasswordKey": null,
      "retainSessionCache": false,
      "showPasswordInHeader": false,
    },
    "amServicesWebAgent": {
      "amLoginUrl": [
        "https://idc.scheuber.io/login?realm=/alpha",
      ],
      "amLogoutUrl": [
        "https://idc.scheuber.io:443/am/UI/Logout",
      ],
      "applicationLogoutUrls": [
        "",
      ],
      "conditionalLoginUrl": [
        "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
      ],
      "customLoginMode": 0,
      "enableLogoutRegex": false,
      "fetchPoliciesFromRootResource": false,
      "invalidateLogoutSession": true,
      "logoutRedirectDisabled": false,
      "logoutRedirectUrl": null,
      "logoutResetCookies": [
        "",
      ],
      "logoutUrlRegex": null,
      "policyCachePollingInterval": 3,
      "policyClockSkew": 0,
      "policyEvaluationApplication": "apps",
      "policyEvaluationRealm": "/alpha",
      "publicAmUrl": null,
      "regexConditionalLoginPattern": [
        "",
      ],
      "regexConditionalLoginUrl": [
        "",
      ],
      "retrieveClientHostname": false,
      "ssoCachePollingInterval": 3,
      "userIdParameter": "UserToken",
      "userIdParameterType": "session",
    },
    "applicationWebAgentConfig": {
      "attributeMultiValueSeparator": "|",
      "clientIpValidation": false,
      "continuousSecurityCookies": {},
      "continuousSecurityHeaders": {},
      "fetchAttributesForNotEnforcedUrls": false,
      "ignorePathInfoForNotEnforcedUrls": true,
      "invertNotEnforcedUrls": false,
      "notEnforcedIps": [
        "",
      ],
      "notEnforcedIpsList": [
        "",
      ],
      "notEnforcedIpsRegex": false,
      "notEnforcedUrls": [
        "",
        "https://apps.mytestrun.com/app1/*",
      ],
      "notEnforcedUrlsRegex": false,
      "profileAttributeFetchMode": "NONE",
      "profileAttributeMap": {},
      "responseAttributeFetchMode": "NONE",
      "responseAttributeMap": {},
      "sessionAttributeFetchMode": "NONE",
      "sessionAttributeMap": {},
    },
    "globalWebAgentConfig": {
      "accessDeniedUrl": null,
      "agentConfigChangeNotificationsEnabled": true,
      "agentDebugLevel": "Info",
      "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
      "agentgroup": null,
      "amLbCookieEnable": false,
      "auditAccessType": "LOG_BOTH",
      "auditLogLocation": "ALL",
      "cdssoRootUrl": [
        "agentRootURL=https://apps.mytestrun.com:443/",
      ],
      "configurationPollingInterval": 60,
      "disableJwtAudit": false,
      "fqdnCheck": false,
      "fqdnDefault": "apps.mytestrun.com",
      "fqdnMapping": {},
      "jwtAuditWhitelist": null,
      "jwtName": "am-auth-jwt",
      "notificationsEnabled": true,
      "repositoryLocation": "centralized",
      "resetIdleTime": false,
      "ssoOnlyMode": false,
      "status": "Active",
      "userpassword": null,
      "webSocketConnectionIntervalInMinutes": 30,
    },
    "miscWebAgentConfig": {
      "addCacheControlHeader": true,
      "anonymousUserEnabled": false,
      "anonymousUserId": "anonymous",
      "caseInsensitiveUrlComparison": true,
      "compositeAdviceEncode": false,
      "compositeAdviceRedirect": false,
      "encodeSpecialCharsInCookies": false,
      "encodeUrlSpecialCharacters": false,
      "gotoParameterName": "goto",
      "headerJsonResponse": {},
      "ignorePathInfo": false,
      "invalidUrlRegex": null,
      "invertUrlJsonResponse": false,
      "mineEncodeHeader": 0,
      "profileAttributesCookieMaxAge": 300,
      "profileAttributesCookiePrefix": "HTTP_",
      "statusCodeJsonResponse": 202,
      "urlJsonResponse": [
        "",
      ],
    },
    "ssoWebAgentConfig": {
      "acceptSsoToken": false,
      "cdssoCookieDomain": [
        "",
      ],
      "cdssoRedirectUri": "agent/cdsso-oauth2",
      "cookieName": "iPlanetDirectoryPro",
      "cookieResetEnabled": false,
      "cookieResetList": [
        "",
      ],
      "cookieResetOnRedirect": false,
      "httpOnly": true,
      "multivaluePreAuthnCookie": false,
      "persistentJwtCookie": false,
      "sameSite": null,
      "secureCookies": false,
    },
  },
]
`;

exports[`AgentApi findAgentByTypeAndId() 1: Find IdentityGatewayAgent 'FrodoTestGatewayAgent1' 1`] = `
[
  {
    "_id": "FrodoTestGatewayAgent1",
    "_rev": "2044815758",
    "_type": {
      "_id": "IdentityGatewayAgent",
      "collection": true,
      "name": "Identity Gateway Agents",
    },
    "agentgroup": null,
    "igCdssoRedirectUrls": [
      "https://ig.mytestrun.com/expanse/cdsso/redirect",
      "https://ig.mytestrun.com/ig/cdsso/redirect",
      "https://ig.scheuber.io/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/grafana/cdsso/redirect",
      "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
      "https://ig.mytestrun.com/bi/cdsso/redirect",
      "https://ig.mytestrun.com/prometheus/cdsso/redirect",
      "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/forgerock/cdsso/redirect",
    ],
    "igTokenIntrospection": "Realm_Subs",
    "status": "Active",
  },
]
`;

exports[`AgentApi findAgentByTypeAndId() 2: Find J2EEAgent 'FrodoTestJavaAgent1' 1`] = `
[
  {
    "_id": "FrodoTestJavaAgent1",
    "_rev": "-1691128348",
    "_type": {
      "_id": "J2EEAgent",
      "collection": true,
      "name": "J2EE Agents",
    },
    "advancedJ2EEAgentConfig": {
      "alternativeAgentHostname": null,
      "alternativeAgentPort": null,
      "alternativeAgentProtocol": null,
      "clientHostnameHeader": null,
      "clientIpHeader": null,
      "customProperties": [],
      "expiredSessionCacheSize": 500,
      "expiredSessionCacheTTL": 20,
      "fragmentRelayUri": null,
      "idleTimeRefreshWindow": 1,
      "jwtCacheSize": 5000,
      "jwtCacheTTL": 30,
      "missingPostDataPreservationEntryUri": [
        "",
      ],
      "monitoringToCSV": false,
      "policyCachePerUser": 50,
      "policyCacheSize": 5000,
      "policyClientPollingInterval": 3,
      "possibleXssCodeElements": [
        "",
      ],
      "postDataCacheTtlMin": 5,
      "postDataPreservation": false,
      "postDataPreserveCacheEntryMaxEntries": 1000,
      "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
      "postDataStickySessionKeyValue": null,
      "postDataStickySessionMode": "URL",
      "sessionCacheTTL": 15,
      "ssoExchangeCacheSize": 100,
      "ssoExchangeCacheTTL": 5,
      "xssDetectionRedirectUri": {},
    },
    "amServicesJ2EEAgent": {
      "agentAdviceEncode": false,
      "amLoginUrl": [],
      "authServiceHost": "openam-volker-dev.forgeblocks.com",
      "authServicePort": 443,
      "authServiceProtocol": "https",
      "authSuccessRedirectUrl": false,
      "conditionalLoginUrl": [
        "",
      ],
      "conditionalLogoutUrl": [
        "",
      ],
      "customLoginEnabled": false,
      "legacyLoginUrlList": [
        "",
      ],
      "overridePolicyEvaluationRealmEnabled": false,
      "policyEvaluationApplication": "iPlanetAMWebAgentService",
      "policyEvaluationRealm": "/",
      "policyNotifications": true,
      "restrictToRealm": {},
      "urlPolicyEnvGetParameters": [
        "",
      ],
      "urlPolicyEnvJsessionParameters": [
        "",
      ],
      "urlPolicyEnvPostParameters": [
        "",
      ],
    },
    "applicationJ2EEAgentConfig": {
      "applicationLogoutUris": {},
      "clientIpValidationMode": {
        "": "OFF",
      },
      "clientIpValidationRange": {},
      "continuousSecurityCookies": {},
      "continuousSecurityHeaders": {},
      "cookieAttributeMultiValueSeparator": "|",
      "cookieAttributeUrlEncoded": true,
      "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
      "invertNotEnforcedIps": false,
      "invertNotEnforcedUris": false,
      "logoutEntryUri": {},
      "logoutIntrospection": false,
      "logoutRequestParameters": {},
      "notEnforcedFavicon": true,
      "notEnforcedIps": [
        "",
      ],
      "notEnforcedIpsCacheEnabled": true,
      "notEnforcedIpsCacheSize": 1000,
      "notEnforcedRuleCompoundSeparator": "|",
      "notEnforcedUris": [
        "",
      ],
      "notEnforcedUrisCacheEnabled": true,
      "notEnforcedUrisCacheSize": 1000,
      "profileAttributeFetchMode": "NONE",
      "profileAttributeMap": {},
      "resourceAccessDeniedUri": {},
      "responseAttributeFetchMode": "NONE",
      "responseAttributeMap": {},
      "sessionAttributeFetchMode": "NONE",
      "sessionAttributeMap": {},
    },
    "globalJ2EEAgentConfig": {
      "agentConfigChangeNotificationsEnabled": true,
      "agentgroup": null,
      "auditAccessType": "LOG_NONE",
      "auditLogLocation": "REMOTE",
      "cdssoRootUrl": [
        "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
      ],
      "configurationReloadInterval": 0,
      "customResponseHeader": {},
      "debugLevel": "error",
      "debugLogfilePrefix": null,
      "debugLogfileRetentionCount": -1,
      "debugLogfileRotationMinutes": -1,
      "debugLogfileRotationSize": 52428800,
      "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
      "filterMode": {
        "": "ALL",
      },
      "fqdnCheck": false,
      "fqdnDefault": "openam-volker-dev.forgeblocks.com",
      "fqdnMapping": {},
      "httpSessionBinding": true,
      "jwtName": "am-auth-jwt",
      "lbCookieEnabled": false,
      "lbCookieName": "amlbcookie",
      "localAuditLogRotation": false,
      "localAuditLogfileRetentionCount": -1,
      "localAuditRotationSize": 52428800,
      "loginAttemptLimit": 0,
      "loginAttemptLimitCookieName": "amFilterParam",
      "preAuthCookieMaxAge": 300,
      "preAuthCookieName": "amFilterCDSSORequest",
      "recheckAmUnavailabilityInSeconds": 5,
      "redirectAttemptLimit": 0,
      "redirectAttemptLimitCookieName": "amFilterRDParam",
      "repositoryLocation": "centralized",
      "status": "Active",
      "userAttributeName": "employeenumber",
      "userMappingMode": "USER_ID",
      "userPrincipalFlag": false,
      "userTokenName": "UserToken",
      "webSocketConnectionIntervalInMinutes": 30,
    },
    "miscJ2EEAgentConfig": {
      "agent302RedirectContentType": "application/json",
      "agent302RedirectEnabled": true,
      "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
      "agent302RedirectInvertEnabled": false,
      "agent302RedirectNerList": [
        "",
      ],
      "agent302RedirectStatusCode": 200,
      "authFailReasonParameterName": null,
      "authFailReasonParameterRemapper": {},
      "authFailReasonUrl": null,
      "gotoParameterName": "goto",
      "gotoUrl": null,
      "ignorePathInfo": false,
      "legacyRedirectUri": "/agent/sunwLegacySupportURI",
      "legacyUserAgentList": [
        "Mozilla/4.7*",
      ],
      "legacyUserAgentSupport": false,
      "localeCountry": "US",
      "localeLanguage": "en",
      "loginReasonMap": {},
      "loginReasonParameterName": null,
      "portCheckEnabled": false,
      "portCheckFile": "PortCheckContent.txt",
      "portCheckSetting": {
        "443": "https",
      },
      "unwantedHttpUrlParams": [
        "",
      ],
      "unwantedHttpUrlRegexParams": [
        "",
      ],
      "wantedHttpUrlParams": [
        "",
      ],
      "wantedHttpUrlRegexParams": [
        "",
      ],
    },
    "ssoJ2EEAgentConfig": {
      "acceptIPDPCookie": false,
      "acceptSsoTokenDomainList": [
        "",
      ],
      "acceptSsoTokenEnabled": false,
      "authExchangeCookieName": null,
      "authExchangeUri": null,
      "cdssoDomainList": [
        "",
      ],
      "cdssoRedirectUri": "/agent/post-authn-redirect",
      "cdssoSecureCookies": false,
      "cookieResetDomains": {},
      "cookieResetEnabled": false,
      "cookieResetNames": [
        "",
      ],
      "cookieResetPaths": {},
      "encodeCookies": false,
      "excludedUserAgentsList": [],
      "httpOnly": true,
      "setCookieAttributeMap": {},
      "setCookieInternalMap": {},
    },
  },
]
`;

exports[`AgentApi findAgentByTypeAndId() 3: Find WebAgent 'FrodoTestWebAgent1' 1`] = `
[
  {
    "_id": "FrodoTestWebAgent1",
    "_rev": "-342721471",
    "_type": {
      "_id": "WebAgent",
      "collection": true,
      "name": "Web Agents",
    },
    "advancedWebAgentConfig": {
      "apacheAuthDirectives": null,
      "clientHostnameHeader": null,
      "clientIpHeader": null,
      "customProperties": [],
      "fragmentRedirectEnabled": false,
      "hostnameToIpAddress": [],
      "logonAndImpersonation": false,
      "overrideRequestHost": true,
      "overrideRequestPort": true,
      "overrideRequestProtocol": true,
      "pdpJavascriptRepost": false,
      "pdpSkipPostUrl": [
        "",
      ],
      "pdpStickySessionCookieName": null,
      "pdpStickySessionMode": "OFF",
      "pdpStickySessionValue": null,
      "postDataCachePeriod": 10,
      "postDataPreservation": false,
      "replayPasswordKey": null,
      "retainSessionCache": false,
      "showPasswordInHeader": false,
    },
    "amServicesWebAgent": {
      "amLoginUrl": [
        "https://idc.scheuber.io/login?realm=/alpha",
      ],
      "amLogoutUrl": [
        "https://idc.scheuber.io:443/am/UI/Logout",
      ],
      "applicationLogoutUrls": [
        "",
      ],
      "conditionalLoginUrl": [
        "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
      ],
      "customLoginMode": 0,
      "enableLogoutRegex": false,
      "fetchPoliciesFromRootResource": false,
      "invalidateLogoutSession": true,
      "logoutRedirectDisabled": false,
      "logoutRedirectUrl": null,
      "logoutResetCookies": [
        "",
      ],
      "logoutUrlRegex": null,
      "policyCachePollingInterval": 3,
      "policyClockSkew": 0,
      "policyEvaluationApplication": "apps",
      "policyEvaluationRealm": "/alpha",
      "publicAmUrl": null,
      "regexConditionalLoginPattern": [
        "",
      ],
      "regexConditionalLoginUrl": [
        "",
      ],
      "retrieveClientHostname": false,
      "ssoCachePollingInterval": 3,
      "userIdParameter": "UserToken",
      "userIdParameterType": "session",
    },
    "applicationWebAgentConfig": {
      "attributeMultiValueSeparator": "|",
      "clientIpValidation": false,
      "continuousSecurityCookies": {},
      "continuousSecurityHeaders": {},
      "fetchAttributesForNotEnforcedUrls": false,
      "ignorePathInfoForNotEnforcedUrls": true,
      "invertNotEnforcedUrls": false,
      "notEnforcedIps": [
        "",
      ],
      "notEnforcedIpsList": [
        "",
      ],
      "notEnforcedIpsRegex": false,
      "notEnforcedUrls": [
        "",
        "https://apps.mytestrun.com/app1/*",
      ],
      "notEnforcedUrlsRegex": false,
      "profileAttributeFetchMode": "NONE",
      "profileAttributeMap": {},
      "responseAttributeFetchMode": "NONE",
      "responseAttributeMap": {},
      "sessionAttributeFetchMode": "NONE",
      "sessionAttributeMap": {},
    },
    "globalWebAgentConfig": {
      "accessDeniedUrl": null,
      "agentConfigChangeNotificationsEnabled": true,
      "agentDebugLevel": "Info",
      "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
      "agentgroup": null,
      "amLbCookieEnable": false,
      "auditAccessType": "LOG_BOTH",
      "auditLogLocation": "ALL",
      "cdssoRootUrl": [
        "agentRootURL=https://apps.mytestrun.com:443/",
      ],
      "configurationPollingInterval": 60,
      "disableJwtAudit": false,
      "fqdnCheck": false,
      "fqdnDefault": "apps.mytestrun.com",
      "fqdnMapping": {},
      "jwtAuditWhitelist": null,
      "jwtName": "am-auth-jwt",
      "notificationsEnabled": true,
      "repositoryLocation": "centralized",
      "resetIdleTime": false,
      "ssoOnlyMode": false,
      "status": "Active",
      "webSocketConnectionIntervalInMinutes": 30,
    },
    "miscWebAgentConfig": {
      "addCacheControlHeader": true,
      "anonymousUserEnabled": false,
      "anonymousUserId": "anonymous",
      "caseInsensitiveUrlComparison": true,
      "compositeAdviceEncode": false,
      "compositeAdviceRedirect": false,
      "encodeSpecialCharsInCookies": false,
      "encodeUrlSpecialCharacters": false,
      "gotoParameterName": "goto",
      "headerJsonResponse": {},
      "ignorePathInfo": false,
      "invalidUrlRegex": null,
      "invertUrlJsonResponse": false,
      "mineEncodeHeader": 0,
      "profileAttributesCookieMaxAge": 300,
      "profileAttributesCookiePrefix": "HTTP_",
      "statusCodeJsonResponse": 202,
      "urlJsonResponse": [
        "",
      ],
    },
    "ssoWebAgentConfig": {
      "acceptSsoToken": false,
      "cdssoCookieDomain": [
        "",
      ],
      "cdssoRedirectUri": "agent/cdsso-oauth2",
      "cookieName": "iPlanetDirectoryPro",
      "cookieResetEnabled": false,
      "cookieResetList": [
        "",
      ],
      "cookieResetOnRedirect": false,
      "httpOnly": true,
      "multivaluePreAuthnCookie": false,
      "persistentJwtCookie": false,
      "sameSite": null,
      "secureCookies": false,
    },
  },
]
`;

exports[`AgentApi getAgentByTypeAndId() 1: Get IdentityGatewayAgent 'FrodoTestGatewayAgent1' 1`] = `
{
  "_id": "FrodoTestGatewayAgent1",
  "_rev": "-1479989528",
  "_type": {
    "_id": "IdentityGatewayAgent",
    "collection": true,
    "name": "Identity Gateway Agents",
  },
  "igCdssoRedirectUrls": {
    "inherited": false,
    "value": [
      "https://ig.mytestrun.com/expanse/cdsso/redirect",
      "https://ig.mytestrun.com/ig/cdsso/redirect",
      "https://ig.scheuber.io/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/grafana/cdsso/redirect",
      "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
      "https://ig.mytestrun.com/bi/cdsso/redirect",
      "https://ig.mytestrun.com/prometheus/cdsso/redirect",
      "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
      "https://ig.mytestrun.com/forgerock/cdsso/redirect",
    ],
  },
  "igTokenIntrospection": {
    "inherited": false,
    "value": "Realm_Subs",
  },
  "status": {
    "inherited": false,
    "value": "Active",
  },
}
`;

exports[`AgentApi getAgentByTypeAndId() 2: Get J2EEAgent 'FrodoTestJavaAgent1' 1`] = `
{
  "_id": "FrodoTestJavaAgent1",
  "_rev": "1389672820",
  "_type": {
    "_id": "J2EEAgent",
    "collection": true,
    "name": "J2EE Agents",
  },
  "advancedJ2EEAgentConfig": {
    "alternativeAgentHostname": {
      "inherited": false,
    },
    "alternativeAgentPort": {
      "inherited": false,
    },
    "alternativeAgentProtocol": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "expiredSessionCacheSize": {
      "inherited": false,
      "value": 500,
    },
    "expiredSessionCacheTTL": {
      "inherited": false,
      "value": 20,
    },
    "fragmentRelayUri": {
      "inherited": false,
    },
    "idleTimeRefreshWindow": {
      "inherited": false,
      "value": 1,
    },
    "jwtCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "jwtCacheTTL": {
      "inherited": false,
      "value": 30,
    },
    "missingPostDataPreservationEntryUri": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "monitoringToCSV": {
      "inherited": false,
      "value": false,
    },
    "policyCachePerUser": {
      "inherited": false,
      "value": 50,
    },
    "policyCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "policyClientPollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "possibleXssCodeElements": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "postDataCacheTtlMin": {
      "inherited": false,
      "value": 5,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "postDataPreserveCacheEntryMaxEntries": {
      "inherited": false,
      "value": 1000,
    },
    "postDataPreserveCacheEntryMaxTotalSizeMb": {
      "inherited": false,
      "value": -1,
    },
    "postDataStickySessionKeyValue": {
      "inherited": false,
    },
    "postDataStickySessionMode": {
      "inherited": false,
      "value": "URL",
    },
    "sessionCacheTTL": {
      "inherited": false,
      "value": 15,
    },
    "ssoExchangeCacheSize": {
      "inherited": false,
      "value": 100,
    },
    "ssoExchangeCacheTTL": {
      "inherited": false,
      "value": 5,
    },
    "xssDetectionRedirectUri": {
      "inherited": false,
      "value": {},
    },
  },
  "amServicesJ2EEAgent": {
    "agentAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "amLoginUrl": {
      "inherited": false,
      "value": [],
    },
    "authServiceHost": {
      "inherited": false,
      "value": "openam-volker-dev.forgeblocks.com",
    },
    "authServicePort": {
      "inherited": false,
      "value": 443,
    },
    "authServiceProtocol": {
      "inherited": false,
      "value": "https",
    },
    "authSuccessRedirectUrl": {
      "inherited": false,
      "value": false,
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "conditionalLogoutUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "customLoginEnabled": {
      "inherited": false,
      "value": false,
    },
    "legacyLoginUrlList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "overridePolicyEvaluationRealmEnabled": {
      "inherited": false,
      "value": false,
    },
    "policyEvaluationApplication": {
      "inherited": false,
      "value": "iPlanetAMWebAgentService",
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/",
    },
    "policyNotifications": {
      "inherited": false,
      "value": true,
    },
    "restrictToRealm": {
      "inherited": false,
      "value": {},
    },
    "urlPolicyEnvGetParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvJsessionParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvPostParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "applicationJ2EEAgentConfig": {
    "applicationLogoutUris": {
      "inherited": false,
      "value": {},
    },
    "clientIpValidationMode": {
      "inherited": false,
      "value": {
        "": "OFF",
      },
    },
    "clientIpValidationRange": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "cookieAttributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "cookieAttributeUrlEncoded": {
      "inherited": false,
      "value": true,
    },
    "headerAttributeDateFormat": {
      "inherited": false,
      "value": "EEE, d MMM yyyy hh:mm:ss z",
    },
    "invertNotEnforcedIps": {
      "inherited": false,
      "value": false,
    },
    "invertNotEnforcedUris": {
      "inherited": false,
      "value": false,
    },
    "logoutEntryUri": {
      "inherited": false,
      "value": {},
    },
    "logoutIntrospection": {
      "inherited": false,
      "value": false,
    },
    "logoutRequestParameters": {
      "inherited": false,
      "value": {},
    },
    "notEnforcedFavicon": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIpsCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "notEnforcedRuleCompoundSeparator": {
      "inherited": false,
      "value": "|",
    },
    "notEnforcedUris": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedUrisCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedUrisCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "resourceAccessDeniedUri": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalJ2EEAgentConfig": {
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_NONE",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "REMOTE",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
      ],
    },
    "configurationReloadInterval": {
      "inherited": false,
      "value": 0,
    },
    "customResponseHeader": {
      "inherited": false,
      "value": {},
    },
    "debugLevel": {
      "inherited": false,
      "value": "error",
    },
    "debugLogfilePrefix": {
      "inherited": false,
    },
    "debugLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationMinutes": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "debugLogfileSuffix": {
      "inherited": false,
      "value": "-yyyy.MM.dd-HH.mm.ss",
    },
    "filterMode": {
      "inherited": false,
      "value": {
        "": "ALL",
      },
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "openam-volker-dev.forgeblocks.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "httpSessionBinding": {
      "inherited": false,
      "value": true,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "lbCookieEnabled": {
      "inherited": false,
      "value": false,
    },
    "lbCookieName": {
      "inherited": false,
      "value": "amlbcookie",
    },
    "localAuditLogRotation": {
      "inherited": false,
      "value": false,
    },
    "localAuditLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "localAuditRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "loginAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "loginAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterParam",
    },
    "preAuthCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "preAuthCookieName": {
      "inherited": false,
      "value": "amFilterCDSSORequest",
    },
    "recheckAmUnavailabilityInSeconds": {
      "inherited": false,
      "value": 5,
    },
    "redirectAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "redirectAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterRDParam",
    },
    "repositoryLocation": "centralized",
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "userAttributeName": {
      "inherited": false,
      "value": "employeenumber",
    },
    "userMappingMode": {
      "inherited": false,
      "value": "USER_ID",
    },
    "userPrincipalFlag": {
      "inherited": false,
      "value": false,
    },
    "userTokenName": {
      "inherited": false,
      "value": "UserToken",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscJ2EEAgentConfig": {
    "agent302RedirectContentType": {
      "inherited": false,
      "value": "application/json",
    },
    "agent302RedirectEnabled": {
      "inherited": false,
      "value": true,
    },
    "agent302RedirectHttpData": {
      "inherited": false,
      "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
    },
    "agent302RedirectInvertEnabled": {
      "inherited": false,
      "value": false,
    },
    "agent302RedirectNerList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "agent302RedirectStatusCode": {
      "inherited": false,
      "value": 200,
    },
    "authFailReasonParameterName": {
      "inherited": false,
    },
    "authFailReasonParameterRemapper": {
      "inherited": false,
      "value": {},
    },
    "authFailReasonUrl": {
      "inherited": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "gotoUrl": {
      "inherited": false,
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "legacyRedirectUri": {
      "inherited": false,
      "value": "/agent/sunwLegacySupportURI",
    },
    "legacyUserAgentList": {
      "inherited": false,
      "value": [
        "Mozilla/4.7*",
      ],
    },
    "legacyUserAgentSupport": {
      "inherited": false,
      "value": false,
    },
    "localeCountry": {
      "inherited": false,
      "value": "US",
    },
    "localeLanguage": {
      "inherited": false,
      "value": "en",
    },
    "loginReasonMap": {
      "inherited": false,
      "value": {},
    },
    "loginReasonParameterName": {
      "inherited": false,
    },
    "portCheckEnabled": {
      "inherited": false,
      "value": false,
    },
    "portCheckFile": {
      "inherited": false,
      "value": "PortCheckContent.txt",
    },
    "portCheckSetting": {
      "inherited": false,
      "value": {
        "443": "https",
      },
    },
    "unwantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "unwantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoJ2EEAgentConfig": {
    "acceptIPDPCookie": {
      "inherited": false,
      "value": false,
    },
    "acceptSsoTokenDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "acceptSsoTokenEnabled": {
      "inherited": false,
      "value": false,
    },
    "authExchangeCookieName": {
      "inherited": false,
    },
    "authExchangeUri": {
      "inherited": false,
    },
    "cdssoDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "/agent/post-authn-redirect",
    },
    "cdssoSecureCookies": {
      "inherited": false,
      "value": false,
    },
    "cookieResetDomains": {
      "inherited": false,
      "value": {},
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetNames": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetPaths": {
      "inherited": false,
      "value": {},
    },
    "encodeCookies": {
      "inherited": false,
      "value": false,
    },
    "excludedUserAgentsList": {
      "inherited": false,
      "value": [],
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "setCookieAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "setCookieInternalMap": {
      "inherited": false,
      "value": {},
    },
  },
}
`;

exports[`AgentApi getAgentByTypeAndId() 3: Get WebAgent 'FrodoTestWebAgent1' 1`] = `
{
  "_id": "FrodoTestWebAgent1",
  "_rev": "-56934604",
  "_type": {
    "_id": "WebAgent",
    "collection": true,
    "name": "Web Agents",
  },
  "advancedWebAgentConfig": {
    "apacheAuthDirectives": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "fragmentRedirectEnabled": {
      "inherited": false,
      "value": false,
    },
    "hostnameToIpAddress": {
      "inherited": false,
      "value": [],
    },
    "logonAndImpersonation": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestHost": {
      "inherited": false,
      "value": true,
    },
    "overrideRequestPort": {
      "inherited": false,
      "value": true,
    },
    "overrideRequestProtocol": {
      "inherited": false,
      "value": true,
    },
    "pdpJavascriptRepost": {
      "inherited": false,
      "value": false,
    },
    "pdpSkipPostUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "pdpStickySessionCookieName": {
      "inherited": false,
    },
    "pdpStickySessionMode": {
      "inherited": false,
      "value": "OFF",
    },
    "pdpStickySessionValue": {
      "inherited": false,
    },
    "postDataCachePeriod": {
      "inherited": false,
      "value": 10,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "replayPasswordKey": {
      "inherited": false,
    },
    "retainSessionCache": {
      "inherited": false,
      "value": false,
    },
    "showPasswordInHeader": {
      "inherited": false,
      "value": false,
    },
  },
  "amServicesWebAgent": {
    "amLoginUrl": {
      "inherited": false,
      "value": [
        "https://idc.scheuber.io/login?realm=/alpha",
      ],
    },
    "amLogoutUrl": {
      "inherited": false,
      "value": [
        "https://idc.scheuber.io:443/am/UI/Logout",
      ],
    },
    "applicationLogoutUrls": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
      ],
    },
    "customLoginMode": {
      "inherited": false,
      "value": 0,
    },
    "enableLogoutRegex": {
      "inherited": false,
      "value": false,
    },
    "fetchPoliciesFromRootResource": {
      "inherited": false,
      "value": false,
    },
    "invalidateLogoutSession": {
      "inherited": false,
      "value": true,
    },
    "logoutRedirectDisabled": {
      "inherited": false,
      "value": false,
    },
    "logoutRedirectUrl": {
      "inherited": false,
    },
    "logoutResetCookies": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "logoutUrlRegex": {
      "inherited": false,
    },
    "policyCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "policyClockSkew": {
      "inherited": false,
      "value": 0,
    },
    "policyEvaluationApplication": {
      "inherited": false,
      "value": "apps",
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/alpha",
    },
    "publicAmUrl": {
      "inherited": false,
    },
    "regexConditionalLoginPattern": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "regexConditionalLoginUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "retrieveClientHostname": {
      "inherited": false,
      "value": false,
    },
    "ssoCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "userIdParameter": {
      "inherited": false,
      "value": "UserToken",
    },
    "userIdParameterType": {
      "inherited": false,
      "value": "session",
    },
  },
  "applicationWebAgentConfig": {
    "attributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "clientIpValidation": {
      "inherited": false,
      "value": false,
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "fetchAttributesForNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "ignorePathInfoForNotEnforcedUrls": {
      "inherited": false,
      "value": true,
    },
    "invertNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsRegex": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedUrls": {
      "inherited": false,
      "value": [
        "",
        "https://apps.mytestrun.com/app1/*",
      ],
    },
    "notEnforcedUrlsRegex": {
      "inherited": false,
      "value": false,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalWebAgentConfig": {
    "accessDeniedUrl": {
      "inherited": false,
    },
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "agentDebugLevel": {
      "inherited": false,
      "value": "Info",
    },
    "agentUriPrefix": {
      "inherited": false,
      "value": "https://apps.mytestrun.com:443/amagent",
    },
    "amLbCookieEnable": {
      "inherited": false,
      "value": false,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_BOTH",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "ALL",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=https://apps.mytestrun.com:443/",
      ],
    },
    "configurationPollingInterval": {
      "inherited": false,
      "value": 60,
    },
    "disableJwtAudit": {
      "inherited": false,
      "value": false,
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "apps.mytestrun.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "jwtAuditWhitelist": {
      "inherited": false,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "notificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "repositoryLocation": "centralized",
    "resetIdleTime": {
      "inherited": false,
      "value": false,
    },
    "ssoOnlyMode": {
      "inherited": false,
      "value": false,
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscWebAgentConfig": {
    "addCacheControlHeader": {
      "inherited": false,
      "value": true,
    },
    "anonymousUserEnabled": {
      "inherited": false,
      "value": false,
    },
    "anonymousUserId": {
      "inherited": false,
      "value": "anonymous",
    },
    "caseInsensitiveUrlComparison": {
      "inherited": false,
      "value": true,
    },
    "compositeAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "compositeAdviceRedirect": {
      "inherited": false,
      "value": false,
    },
    "encodeSpecialCharsInCookies": {
      "inherited": false,
      "value": false,
    },
    "encodeUrlSpecialCharacters": {
      "inherited": false,
      "value": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "headerJsonResponse": {
      "inherited": false,
      "value": {},
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "invalidUrlRegex": {
      "inherited": false,
    },
    "invertUrlJsonResponse": {
      "inherited": false,
      "value": false,
    },
    "mineEncodeHeader": {
      "inherited": false,
      "value": 0,
    },
    "profileAttributesCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "profileAttributesCookiePrefix": {
      "inherited": false,
      "value": "HTTP_",
    },
    "statusCodeJsonResponse": {
      "inherited": false,
      "value": 202,
    },
    "urlJsonResponse": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoWebAgentConfig": {
    "acceptSsoToken": {
      "inherited": false,
      "value": false,
    },
    "cdssoCookieDomain": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "agent/cdsso-oauth2",
    },
    "cookieName": {
      "inherited": false,
      "value": "iPlanetDirectoryPro",
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetOnRedirect": {
      "inherited": false,
      "value": false,
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "multivaluePreAuthnCookie": {
      "inherited": false,
      "value": false,
    },
    "persistentJwtCookie": {
      "inherited": false,
      "value": false,
    },
    "sameSite": {
      "inherited": false,
    },
    "secureCookies": {
      "inherited": false,
      "value": false,
    },
  },
}
`;

exports[`AgentApi getAgentTypes() 1: Get all agent types 1`] = `
{
  "result": [
    {
      "_id": "WebAgent",
      "collection": true,
      "name": "Web Agents",
    },
    {
      "_id": "J2EEAgent",
      "collection": true,
      "name": "J2EE Agents",
    },
    {
      "_id": "2.2_Agent",
      "collection": true,
      "name": "2.2 Agents",
    },
    {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Client Agents",
    },
    {
      "_id": "SharedAgent",
      "collection": true,
      "name": "Shared Agents",
    },
    {
      "_id": "SoapSTSAgent",
      "collection": true,
      "name": "Soap STS Agents",
    },
    {
      "_id": "RemoteConsentAgent",
      "collection": true,
      "name": "OAuth2 Remote Consent Agents",
    },
    {
      "_id": "SoftwarePublisher",
      "collection": true,
      "name": "OAuth2 Software Publisher Agents",
    },
    {
      "_id": "IdentityGatewayAgent",
      "collection": true,
      "name": "Identity Gateway Agents",
    },
    {
      "_id": "TrustedJwtIssuer",
      "collection": true,
      "name": "OAuth2 Trusted JWT Issuer Agents",
    },
  ],
}
`;

exports[`AgentApi getAgents() 1: Get all agents 1`] = `
{
  "result": [
    {
      "_id": "FrodoTestWebAgent1",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": true,
        "overrideRequestPort": true,
        "overrideRequestProtocol": true,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [
          "https://idc.scheuber.io/login?realm=/alpha",
        ],
        "amLogoutUrl": [
          "https://idc.scheuber.io:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
          "https://apps.mytestrun.com/app1/*",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Info",
        "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_BOTH",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=https://apps.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "apps.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": true,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
    {
      "_id": "FrodoTestWebAgent3",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": false,
        "overrideRequestPort": false,
        "overrideRequestProtocol": false,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [],
        "amLogoutUrl": [
          "https://openam-volker-dev.forgeblocks.com:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "|https://openam-volker-dev.forgeblocks.com:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": null,
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Error",
        "agentUriPrefix": "https://www.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://www.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "www.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": false,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
    {
      "_id": "apacheagent",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": true,
        "overrideRequestPort": true,
        "overrideRequestProtocol": true,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [
          "https://idc.scheuber.io/login?realm=/alpha",
        ],
        "amLogoutUrl": [
          "https://idc.scheuber.io:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
          "https://apps.mytestrun.com/app1/*",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Info",
        "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_BOTH",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=https://apps.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "apps.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": true,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
    {
      "_id": "FrodoTestJavaAgent1",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "openam-volker-dev.forgeblocks.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "tomcatagent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "|?realm=/alpha",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": false,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=http://localhost:8080/",
          "agentRootURL=https://apps2.mytestrun.com:443/",
        ],
        "configurationReloadInterval": 10,
        "customResponseHeader": {},
        "debugLevel": "message",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "URL_POLICY",
        },
        "fqdnCheck": false,
        "fqdnDefault": "apps2.mytestrun.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "uid",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/app1/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agentapp/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "javaAgent",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "openam-volker-dev.forgeblocks.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "FrodoTestJavaAgent3",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "|?realm=/alpha",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": false,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=http://localhost:8080/",
          "agentRootURL=https://apps2.mytestrun.com:443/",
        ],
        "configurationReloadInterval": 10,
        "customResponseHeader": {},
        "debugLevel": "message",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "URL_POLICY",
        },
        "fqdnCheck": false,
        "fqdnDefault": "apps2.mytestrun.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "uid",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/app1/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agentapp/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "idmAdminClient",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "implicit",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "none",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Public",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [
          "https://openam-frodo-dev.forgeblocks.com/admin/appAuthHelperRedirect.html",
          "https://openam-frodo-dev.forgeblocks.com/admin/sessionCheck.html",
          "https://openam-frodo-dev.forgeblocks.com/platform/appAuthHelperRedirect.html",
          "https://openam-frodo-dev.forgeblocks.com/platform/sessionCheck.html",
        ],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*",
          "openid",
          "fr:idc:esv:*",
          "fr:idc:esv:read",
          "fr:idc:esv:update",
          "fr:idc:esv:restart",
          "fr:autoaccess:*",
          "fr:idc:promotion:*",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": false,
        "issueRefreshTokenOnRefreshedToken": false,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": "[Empty]",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "23281ea7-739b-4fd1-b953-eaae73a2b497",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:31:09 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "agentgroup": null,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "23281ea7-739b-4fd1-b953-eaae73a2b497",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "openidm-resource-server",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "requestUris": [],
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "am-introspect-all-tokens",
          "am-introspect-all-tokens-any-realm",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "c234ba0b-58a1-4cfd-9567-09edde980745",
        "clientsCanSkipConsent": true,
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
        "providerOverridesEnabled": true,
        "statelessTokensEnabled": true,
      },
      "signEncOAuth2ClientConfig": {
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "86fca6d7-2f52-4524-92c6-b6f416071455",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:32:32 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "86fca6d7-2f52-4524-92c6-b6f416071455",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "idm-provisioning",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "client_credentials",
          "idm_delegation",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*",
          "openid",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": false,
        "issueRefreshTokenOnRefreshedToken": false,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": "[Empty]",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "RCSClient",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": false,
        "issueRefreshTokenOnRefreshedToken": false,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": "[Empty]",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "endUserUIClient",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "implicit",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "none",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Public",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [
          "https://openam-frodo-dev.forgeblocks.com/enduser/appAuthHelperRedirect.html",
          "https://openam-frodo-dev.forgeblocks.com/enduser/sessionCheck.html",
        ],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:autoaccess:*",
          "fr:idm:*",
          "openid",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "e232cff3-2460-47cd-80b2-36c86c0d0f06",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": true,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": false,
        "issueRefreshTokenOnRefreshedToken": false,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "e1db8a0a-0329-4962-a5bf-ecffaca376ae",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": true,
        "remoteConsentServiceId": "[Empty]",
        "statelessTokensEnabled": true,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    {
      "_id": "ajays_client",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "FrodoTestGatewayAgent1",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [
        "https://ig.mytestrun.com/expanse/cdsso/redirect",
        "https://ig.mytestrun.com/ig/cdsso/redirect",
        "https://ig.scheuber.io/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/grafana/cdsso/redirect",
        "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
        "https://ig.mytestrun.com/bi/cdsso/redirect",
        "https://ig.mytestrun.com/prometheus/cdsso/redirect",
        "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/forgerock/cdsso/redirect",
      ],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "FrodoTestGatewayAgent3",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "api_client",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "ig_chico",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "ig_mytestrun_com",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [
        "https://ig.mytestrun.com/expanse/cdsso/redirect",
        "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
        "https://ig.mytestrun.com/forgerock/cdsso/redirect",
        "https://ig.scheuber.io/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/prometheus/cdsso/redirect",
        "https://ig.mytestrun.com/grafana/cdsso/redirect",
        "https://ig.mytestrun.com/bi/cdsso/redirect",
        "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/ig/cdsso/redirect",
      ],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
  ],
}
`;

exports[`AgentApi getAgentsByType() 1: Get all gateway agents 1`] = `
{
  "pagedResultsCookie": null,
  "remainingPagedResults": -1,
  "result": [
    {
      "_id": "ajays_client",
      "_rev": "-1964176177",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "FrodoTestGatewayAgent1",
      "_rev": "2044815758",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [
        "https://ig.mytestrun.com/expanse/cdsso/redirect",
        "https://ig.mytestrun.com/ig/cdsso/redirect",
        "https://ig.scheuber.io/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/grafana/cdsso/redirect",
        "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
        "https://ig.mytestrun.com/bi/cdsso/redirect",
        "https://ig.mytestrun.com/prometheus/cdsso/redirect",
        "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/forgerock/cdsso/redirect",
      ],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "FrodoTestGatewayAgent3",
      "_rev": "-1810861963",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "api_client",
      "_rev": "-1263053449",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "ig_chico",
      "_rev": "-422541982",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
    {
      "_id": "ig_mytestrun_com",
      "_rev": "-1220751952",
      "_type": {
        "_id": "IdentityGatewayAgent",
        "collection": true,
        "name": "Identity Gateway Agents",
      },
      "agentgroup": null,
      "igCdssoRedirectUrls": [
        "https://ig.mytestrun.com/expanse/cdsso/redirect",
        "https://ig.mytestrun.com/ig-sample-app/cdsso/redirect",
        "https://ig.mytestrun.com/forgerock/cdsso/redirect",
        "https://ig.scheuber.io/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/prometheus/cdsso/redirect",
        "https://ig.mytestrun.com/grafana/cdsso/redirect",
        "https://ig.mytestrun.com/bi/cdsso/redirect",
        "https://ig.mytestrun.com/ig/studio/cdsso/redirect",
        "https://ig.mytestrun.com/ig/cdsso/redirect",
      ],
      "igTokenIntrospection": "Realm_Subs",
      "status": "Active",
    },
  ],
  "resultCount": 6,
  "totalPagedResults": 6,
  "totalPagedResultsPolicy": "EXACT",
}
`;

exports[`AgentApi getAgentsByType() 2: Get all java agents 1`] = `
{
  "pagedResultsCookie": null,
  "remainingPagedResults": -1,
  "result": [
    {
      "_id": "FrodoTestJavaAgent1",
      "_rev": "-1691128348",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "openam-volker-dev.forgeblocks.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "tomcatagent",
      "_rev": "2008154605",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "|?realm=/alpha",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": false,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=http://localhost:8080/",
          "agentRootURL=https://apps2.mytestrun.com:443/",
        ],
        "configurationReloadInterval": 10,
        "customResponseHeader": {},
        "debugLevel": "message",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "URL_POLICY",
        },
        "fqdnCheck": false,
        "fqdnDefault": "apps2.mytestrun.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "uid",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/app1/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agentapp/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "javaAgent",
      "_rev": "1159012617",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "iPlanetAMWebAgentService",
        "policyEvaluationRealm": "/",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": true,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://openam-volker-dev.forgeblocks.com:443/",
        ],
        "configurationReloadInterval": 0,
        "customResponseHeader": {},
        "debugLevel": "error",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "ALL",
        },
        "fqdnCheck": false,
        "fqdnDefault": "openam-volker-dev.forgeblocks.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "employeenumber",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/agent/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agent/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
    {
      "_id": "FrodoTestJavaAgent3",
      "_rev": "309933180",
      "_type": {
        "_id": "J2EEAgent",
        "collection": true,
        "name": "J2EE Agents",
      },
      "advancedJ2EEAgentConfig": {
        "alternativeAgentHostname": null,
        "alternativeAgentPort": null,
        "alternativeAgentProtocol": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "expiredSessionCacheSize": 500,
        "expiredSessionCacheTTL": 20,
        "fragmentRelayUri": null,
        "idleTimeRefreshWindow": 1,
        "jwtCacheSize": 5000,
        "jwtCacheTTL": 30,
        "missingPostDataPreservationEntryUri": [
          "",
        ],
        "monitoringToCSV": false,
        "policyCachePerUser": 50,
        "policyCacheSize": 5000,
        "policyClientPollingInterval": 3,
        "possibleXssCodeElements": [
          "",
        ],
        "postDataCacheTtlMin": 5,
        "postDataPreservation": false,
        "postDataPreserveCacheEntryMaxEntries": 1000,
        "postDataPreserveCacheEntryMaxTotalSizeMb": -1,
        "postDataStickySessionKeyValue": null,
        "postDataStickySessionMode": "URL",
        "sessionCacheTTL": 15,
        "ssoExchangeCacheSize": 100,
        "ssoExchangeCacheTTL": 5,
        "xssDetectionRedirectUri": {},
      },
      "amServicesJ2EEAgent": {
        "agentAdviceEncode": false,
        "amLoginUrl": [],
        "authServiceHost": "openam-volker-dev.forgeblocks.com",
        "authServicePort": 443,
        "authServiceProtocol": "https",
        "authSuccessRedirectUrl": false,
        "conditionalLoginUrl": [
          "|?realm=/alpha",
        ],
        "conditionalLogoutUrl": [
          "",
        ],
        "customLoginEnabled": false,
        "legacyLoginUrlList": [
          "",
        ],
        "overridePolicyEvaluationRealmEnabled": false,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "policyNotifications": true,
        "restrictToRealm": {},
        "urlPolicyEnvGetParameters": [
          "",
        ],
        "urlPolicyEnvJsessionParameters": [
          "",
        ],
        "urlPolicyEnvPostParameters": [
          "",
        ],
      },
      "applicationJ2EEAgentConfig": {
        "applicationLogoutUris": {},
        "clientIpValidationMode": {
          "": "OFF",
        },
        "clientIpValidationRange": {},
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "cookieAttributeMultiValueSeparator": "|",
        "cookieAttributeUrlEncoded": true,
        "headerAttributeDateFormat": "EEE, d MMM yyyy hh:mm:ss z",
        "invertNotEnforcedIps": false,
        "invertNotEnforcedUris": false,
        "logoutEntryUri": {},
        "logoutIntrospection": false,
        "logoutRequestParameters": {},
        "notEnforcedFavicon": true,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsCacheEnabled": true,
        "notEnforcedIpsCacheSize": 1000,
        "notEnforcedRuleCompoundSeparator": "|",
        "notEnforcedUris": [
          "",
        ],
        "notEnforcedUrisCacheEnabled": true,
        "notEnforcedUrisCacheSize": 1000,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "resourceAccessDeniedUri": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalJ2EEAgentConfig": {
        "agentConfigChangeNotificationsEnabled": false,
        "agentgroup": null,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=http://localhost:8080/",
          "agentRootURL=https://apps2.mytestrun.com:443/",
        ],
        "configurationReloadInterval": 10,
        "customResponseHeader": {},
        "debugLevel": "message",
        "debugLogfilePrefix": null,
        "debugLogfileRetentionCount": -1,
        "debugLogfileRotationMinutes": -1,
        "debugLogfileRotationSize": 52428800,
        "debugLogfileSuffix": "-yyyy.MM.dd-HH.mm.ss",
        "filterMode": {
          "": "URL_POLICY",
        },
        "fqdnCheck": false,
        "fqdnDefault": "apps2.mytestrun.com",
        "fqdnMapping": {},
        "httpSessionBinding": true,
        "jwtName": "am-auth-jwt",
        "lbCookieEnabled": false,
        "lbCookieName": "amlbcookie",
        "localAuditLogRotation": false,
        "localAuditLogfileRetentionCount": -1,
        "localAuditRotationSize": 52428800,
        "loginAttemptLimit": 0,
        "loginAttemptLimitCookieName": "amFilterParam",
        "preAuthCookieMaxAge": 300,
        "preAuthCookieName": "amFilterCDSSORequest",
        "recheckAmUnavailabilityInSeconds": 5,
        "redirectAttemptLimit": 0,
        "redirectAttemptLimitCookieName": "amFilterRDParam",
        "repositoryLocation": "centralized",
        "status": "Active",
        "userAttributeName": "uid",
        "userMappingMode": "USER_ID",
        "userPrincipalFlag": false,
        "userTokenName": "UserToken",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscJ2EEAgentConfig": {
        "agent302RedirectContentType": "application/json",
        "agent302RedirectEnabled": true,
        "agent302RedirectHttpData": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
        "agent302RedirectInvertEnabled": false,
        "agent302RedirectNerList": [
          "",
        ],
        "agent302RedirectStatusCode": 200,
        "authFailReasonParameterName": null,
        "authFailReasonParameterRemapper": {},
        "authFailReasonUrl": null,
        "gotoParameterName": "goto",
        "gotoUrl": null,
        "ignorePathInfo": false,
        "legacyRedirectUri": "/app1/sunwLegacySupportURI",
        "legacyUserAgentList": [
          "Mozilla/4.7*",
        ],
        "legacyUserAgentSupport": false,
        "localeCountry": "US",
        "localeLanguage": "en",
        "loginReasonMap": {},
        "loginReasonParameterName": null,
        "portCheckEnabled": false,
        "portCheckFile": "PortCheckContent.txt",
        "portCheckSetting": {
          "443": "https",
        },
        "unwantedHttpUrlParams": [
          "",
        ],
        "unwantedHttpUrlRegexParams": [
          "",
        ],
        "wantedHttpUrlParams": [
          "",
        ],
        "wantedHttpUrlRegexParams": [
          "",
        ],
      },
      "ssoJ2EEAgentConfig": {
        "acceptIPDPCookie": false,
        "acceptSsoTokenDomainList": [
          "",
        ],
        "acceptSsoTokenEnabled": false,
        "authExchangeCookieName": null,
        "authExchangeUri": null,
        "cdssoDomainList": [
          "",
        ],
        "cdssoRedirectUri": "/agentapp/post-authn-redirect",
        "cdssoSecureCookies": false,
        "cookieResetDomains": {},
        "cookieResetEnabled": false,
        "cookieResetNames": [
          "",
        ],
        "cookieResetPaths": {},
        "encodeCookies": false,
        "excludedUserAgentsList": [],
        "httpOnly": true,
        "setCookieAttributeMap": {},
        "setCookieInternalMap": {},
      },
    },
  ],
  "resultCount": 4,
  "totalPagedResults": 4,
  "totalPagedResultsPolicy": "EXACT",
}
`;

exports[`AgentApi getAgentsByType() 3: Get all web agents 1`] = `
{
  "pagedResultsCookie": null,
  "remainingPagedResults": -1,
  "result": [
    {
      "_id": "FrodoTestWebAgent1",
      "_rev": "-342721471",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": true,
        "overrideRequestPort": true,
        "overrideRequestProtocol": true,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [
          "https://idc.scheuber.io/login?realm=/alpha",
        ],
        "amLogoutUrl": [
          "https://idc.scheuber.io:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
          "https://apps.mytestrun.com/app1/*",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Info",
        "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_BOTH",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=https://apps.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "apps.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": true,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
    {
      "_id": "FrodoTestWebAgent3",
      "_rev": "-2002465265",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": false,
        "overrideRequestPort": false,
        "overrideRequestProtocol": false,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [],
        "amLogoutUrl": [
          "https://openam-volker-dev.forgeblocks.com:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "|https://openam-volker-dev.forgeblocks.com:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": null,
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Error",
        "agentUriPrefix": "https://www.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_NONE",
        "auditLogLocation": "REMOTE",
        "cdssoRootUrl": [
          "agentRootURL=https://www.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "www.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": false,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
    {
      "_id": "apacheagent",
      "_rev": "1225131508",
      "_type": {
        "_id": "WebAgent",
        "collection": true,
        "name": "Web Agents",
      },
      "advancedWebAgentConfig": {
        "apacheAuthDirectives": null,
        "clientHostnameHeader": null,
        "clientIpHeader": null,
        "customProperties": [],
        "fragmentRedirectEnabled": false,
        "hostnameToIpAddress": [],
        "logonAndImpersonation": false,
        "overrideRequestHost": true,
        "overrideRequestPort": true,
        "overrideRequestProtocol": true,
        "pdpJavascriptRepost": false,
        "pdpSkipPostUrl": [
          "",
        ],
        "pdpStickySessionCookieName": null,
        "pdpStickySessionMode": "OFF",
        "pdpStickySessionValue": null,
        "postDataCachePeriod": 10,
        "postDataPreservation": false,
        "replayPasswordKey": null,
        "retainSessionCache": false,
        "showPasswordInHeader": false,
      },
      "amServicesWebAgent": {
        "amLoginUrl": [
          "https://idc.scheuber.io/login?realm=/alpha",
        ],
        "amLogoutUrl": [
          "https://idc.scheuber.io:443/am/UI/Logout",
        ],
        "applicationLogoutUrls": [
          "",
        ],
        "conditionalLoginUrl": [
          "mytestrun.com|https://idc.scheuber.io:443/am/oauth2/authorize?realm=/alpha",
        ],
        "customLoginMode": 0,
        "enableLogoutRegex": false,
        "fetchPoliciesFromRootResource": false,
        "invalidateLogoutSession": true,
        "logoutRedirectDisabled": false,
        "logoutRedirectUrl": null,
        "logoutResetCookies": [
          "",
        ],
        "logoutUrlRegex": null,
        "policyCachePollingInterval": 3,
        "policyClockSkew": 0,
        "policyEvaluationApplication": "apps",
        "policyEvaluationRealm": "/alpha",
        "publicAmUrl": null,
        "regexConditionalLoginPattern": [
          "",
        ],
        "regexConditionalLoginUrl": [
          "",
        ],
        "retrieveClientHostname": false,
        "ssoCachePollingInterval": 3,
        "userIdParameter": "UserToken",
        "userIdParameterType": "session",
      },
      "applicationWebAgentConfig": {
        "attributeMultiValueSeparator": "|",
        "clientIpValidation": false,
        "continuousSecurityCookies": {},
        "continuousSecurityHeaders": {},
        "fetchAttributesForNotEnforcedUrls": false,
        "ignorePathInfoForNotEnforcedUrls": true,
        "invertNotEnforcedUrls": false,
        "notEnforcedIps": [
          "",
        ],
        "notEnforcedIpsList": [
          "",
        ],
        "notEnforcedIpsRegex": false,
        "notEnforcedUrls": [
          "",
          "https://apps.mytestrun.com/app1/*",
        ],
        "notEnforcedUrlsRegex": false,
        "profileAttributeFetchMode": "NONE",
        "profileAttributeMap": {},
        "responseAttributeFetchMode": "NONE",
        "responseAttributeMap": {},
        "sessionAttributeFetchMode": "NONE",
        "sessionAttributeMap": {},
      },
      "globalWebAgentConfig": {
        "accessDeniedUrl": null,
        "agentConfigChangeNotificationsEnabled": true,
        "agentDebugLevel": "Info",
        "agentUriPrefix": "https://apps.mytestrun.com:443/amagent",
        "agentgroup": null,
        "amLbCookieEnable": false,
        "auditAccessType": "LOG_BOTH",
        "auditLogLocation": "ALL",
        "cdssoRootUrl": [
          "agentRootURL=https://apps.mytestrun.com:443/",
        ],
        "configurationPollingInterval": 60,
        "disableJwtAudit": false,
        "fqdnCheck": false,
        "fqdnDefault": "apps.mytestrun.com",
        "fqdnMapping": {},
        "jwtAuditWhitelist": null,
        "jwtName": "am-auth-jwt",
        "notificationsEnabled": true,
        "repositoryLocation": "centralized",
        "resetIdleTime": false,
        "ssoOnlyMode": false,
        "status": "Active",
        "webSocketConnectionIntervalInMinutes": 30,
      },
      "miscWebAgentConfig": {
        "addCacheControlHeader": true,
        "anonymousUserEnabled": false,
        "anonymousUserId": "anonymous",
        "caseInsensitiveUrlComparison": true,
        "compositeAdviceEncode": false,
        "compositeAdviceRedirect": false,
        "encodeSpecialCharsInCookies": false,
        "encodeUrlSpecialCharacters": false,
        "gotoParameterName": "goto",
        "headerJsonResponse": {},
        "ignorePathInfo": false,
        "invalidUrlRegex": null,
        "invertUrlJsonResponse": false,
        "mineEncodeHeader": 0,
        "profileAttributesCookieMaxAge": 300,
        "profileAttributesCookiePrefix": "HTTP_",
        "statusCodeJsonResponse": 202,
        "urlJsonResponse": [
          "",
        ],
      },
      "ssoWebAgentConfig": {
        "acceptSsoToken": false,
        "cdssoCookieDomain": [
          "",
        ],
        "cdssoRedirectUri": "agent/cdsso-oauth2",
        "cookieName": "iPlanetDirectoryPro",
        "cookieResetEnabled": false,
        "cookieResetList": [
          "",
        ],
        "cookieResetOnRedirect": false,
        "httpOnly": true,
        "multivaluePreAuthnCookie": false,
        "persistentJwtCookie": false,
        "sameSite": null,
        "secureCookies": false,
      },
    },
  ],
  "resultCount": 3,
  "totalPagedResults": 3,
  "totalPagedResultsPolicy": "EXACT",
}
`;

exports[`AgentApi putAgentByTypeAndId() 1: Put IdentityGatewayAgent 'FrodoTestGatewayAgent2' 1`] = `
{
  "_id": "FrodoTestGatewayAgent2",
  "_rev": "899690511",
  "_type": {
    "_id": "IdentityGatewayAgent",
    "collection": true,
    "name": "Identity Gateway Agents",
  },
  "igCdssoRedirectUrls": {
    "inherited": false,
    "value": [],
  },
  "igTokenIntrospection": {
    "inherited": false,
    "value": "Realm_Subs",
  },
  "status": {
    "inherited": false,
    "value": "Active",
  },
}
`;

exports[`AgentApi putAgentByTypeAndId() 2: Put J2EEAgent 'FrodoTestJavaAgent2' 1`] = `
{
  "_id": "FrodoTestJavaAgent2",
  "_rev": "-1750716182",
  "_type": {
    "_id": "J2EEAgent",
    "collection": true,
    "name": "J2EE Agents",
  },
  "advancedJ2EEAgentConfig": {
    "alternativeAgentHostname": {
      "inherited": false,
    },
    "alternativeAgentPort": {
      "inherited": false,
    },
    "alternativeAgentProtocol": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "expiredSessionCacheSize": {
      "inherited": false,
      "value": 500,
    },
    "expiredSessionCacheTTL": {
      "inherited": false,
      "value": 20,
    },
    "fragmentRelayUri": {
      "inherited": false,
    },
    "idleTimeRefreshWindow": {
      "inherited": false,
      "value": 1,
    },
    "jwtCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "jwtCacheTTL": {
      "inherited": false,
      "value": 30,
    },
    "missingPostDataPreservationEntryUri": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "monitoringToCSV": {
      "inherited": false,
      "value": false,
    },
    "policyCachePerUser": {
      "inherited": false,
      "value": 50,
    },
    "policyCacheSize": {
      "inherited": false,
      "value": 5000,
    },
    "policyClientPollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "possibleXssCodeElements": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "postDataCacheTtlMin": {
      "inherited": false,
      "value": 5,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "postDataPreserveCacheEntryMaxEntries": {
      "inherited": false,
      "value": 1000,
    },
    "postDataPreserveCacheEntryMaxTotalSizeMb": {
      "inherited": false,
      "value": -1,
    },
    "postDataStickySessionKeyValue": {
      "inherited": false,
    },
    "postDataStickySessionMode": {
      "inherited": false,
      "value": "URL",
    },
    "sessionCacheTTL": {
      "inherited": false,
      "value": 15,
    },
    "ssoExchangeCacheSize": {
      "inherited": false,
      "value": 100,
    },
    "ssoExchangeCacheTTL": {
      "inherited": false,
      "value": 5,
    },
    "xssDetectionRedirectUri": {
      "inherited": false,
      "value": {},
    },
  },
  "amServicesJ2EEAgent": {
    "agentAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "amLoginUrl": {
      "inherited": false,
      "value": [],
    },
    "authServiceHost": {
      "inherited": false,
      "value": "openam-volker-dev.forgeblocks.com",
    },
    "authServicePort": {
      "inherited": false,
      "value": 443,
    },
    "authServiceProtocol": {
      "inherited": false,
      "value": "https",
    },
    "authSuccessRedirectUrl": {
      "inherited": false,
      "value": false,
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "|?realm=/alpha",
      ],
    },
    "conditionalLogoutUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "customLoginEnabled": {
      "inherited": false,
      "value": false,
    },
    "legacyLoginUrlList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "overridePolicyEvaluationRealmEnabled": {
      "inherited": false,
      "value": false,
    },
    "policyEvaluationApplication": {
      "inherited": false,
      "value": "apps",
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/alpha",
    },
    "policyNotifications": {
      "inherited": false,
      "value": true,
    },
    "restrictToRealm": {
      "inherited": false,
      "value": {},
    },
    "urlPolicyEnvGetParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvJsessionParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "urlPolicyEnvPostParameters": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "applicationJ2EEAgentConfig": {
    "applicationLogoutUris": {
      "inherited": false,
      "value": {},
    },
    "clientIpValidationMode": {
      "inherited": false,
      "value": {
        "": "OFF",
      },
    },
    "clientIpValidationRange": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "cookieAttributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "cookieAttributeUrlEncoded": {
      "inherited": false,
      "value": true,
    },
    "headerAttributeDateFormat": {
      "inherited": false,
      "value": "EEE, d MMM yyyy hh:mm:ss z",
    },
    "invertNotEnforcedIps": {
      "inherited": false,
      "value": false,
    },
    "invertNotEnforcedUris": {
      "inherited": false,
      "value": false,
    },
    "logoutEntryUri": {
      "inherited": false,
      "value": {},
    },
    "logoutIntrospection": {
      "inherited": false,
      "value": false,
    },
    "logoutRequestParameters": {
      "inherited": false,
      "value": {},
    },
    "notEnforcedFavicon": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedIpsCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "notEnforcedRuleCompoundSeparator": {
      "inherited": false,
      "value": "|",
    },
    "notEnforcedUris": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedUrisCacheEnabled": {
      "inherited": false,
      "value": true,
    },
    "notEnforcedUrisCacheSize": {
      "inherited": false,
      "value": 1000,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "resourceAccessDeniedUri": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalJ2EEAgentConfig": {
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": false,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_NONE",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "ALL",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=http://localhost:8080/",
        "agentRootURL=https://apps2.mytestrun.com:443/",
      ],
    },
    "configurationReloadInterval": {
      "inherited": false,
      "value": 10,
    },
    "customResponseHeader": {
      "inherited": false,
      "value": {},
    },
    "debugLevel": {
      "inherited": false,
      "value": "message",
    },
    "debugLogfilePrefix": {
      "inherited": false,
    },
    "debugLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationMinutes": {
      "inherited": false,
      "value": -1,
    },
    "debugLogfileRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "debugLogfileSuffix": {
      "inherited": false,
      "value": "-yyyy.MM.dd-HH.mm.ss",
    },
    "filterMode": {
      "inherited": false,
      "value": {
        "": "URL_POLICY",
      },
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "apps2.mytestrun.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "httpSessionBinding": {
      "inherited": false,
      "value": true,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "lbCookieEnabled": {
      "inherited": false,
      "value": false,
    },
    "lbCookieName": {
      "inherited": false,
      "value": "amlbcookie",
    },
    "localAuditLogRotation": {
      "inherited": false,
      "value": false,
    },
    "localAuditLogfileRetentionCount": {
      "inherited": false,
      "value": -1,
    },
    "localAuditRotationSize": {
      "inherited": false,
      "value": 52428800,
    },
    "loginAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "loginAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterParam",
    },
    "preAuthCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "preAuthCookieName": {
      "inherited": false,
      "value": "amFilterCDSSORequest",
    },
    "recheckAmUnavailabilityInSeconds": {
      "inherited": false,
      "value": 5,
    },
    "redirectAttemptLimit": {
      "inherited": false,
      "value": 0,
    },
    "redirectAttemptLimitCookieName": {
      "inherited": false,
      "value": "amFilterRDParam",
    },
    "repositoryLocation": "centralized",
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "userAttributeName": {
      "inherited": false,
      "value": "uid",
    },
    "userMappingMode": {
      "inherited": false,
      "value": "USER_ID",
    },
    "userPrincipalFlag": {
      "inherited": false,
      "value": false,
    },
    "userTokenName": {
      "inherited": false,
      "value": "UserToken",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscJ2EEAgentConfig": {
    "agent302RedirectContentType": {
      "inherited": false,
      "value": "application/json",
    },
    "agent302RedirectEnabled": {
      "inherited": false,
      "value": true,
    },
    "agent302RedirectHttpData": {
      "inherited": false,
      "value": "{redirect:{requestUri:%REQUEST_URI%,requestUrl:%REQUEST_URL%,targetUrl:%TARGET%}}",
    },
    "agent302RedirectInvertEnabled": {
      "inherited": false,
      "value": false,
    },
    "agent302RedirectNerList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "agent302RedirectStatusCode": {
      "inherited": false,
      "value": 200,
    },
    "authFailReasonParameterName": {
      "inherited": false,
    },
    "authFailReasonParameterRemapper": {
      "inherited": false,
      "value": {},
    },
    "authFailReasonUrl": {
      "inherited": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "gotoUrl": {
      "inherited": false,
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "legacyRedirectUri": {
      "inherited": false,
      "value": "/app1/sunwLegacySupportURI",
    },
    "legacyUserAgentList": {
      "inherited": false,
      "value": [
        "Mozilla/4.7*",
      ],
    },
    "legacyUserAgentSupport": {
      "inherited": false,
      "value": false,
    },
    "localeCountry": {
      "inherited": false,
      "value": "US",
    },
    "localeLanguage": {
      "inherited": false,
      "value": "en",
    },
    "loginReasonMap": {
      "inherited": false,
      "value": {},
    },
    "loginReasonParameterName": {
      "inherited": false,
    },
    "portCheckEnabled": {
      "inherited": false,
      "value": false,
    },
    "portCheckFile": {
      "inherited": false,
      "value": "PortCheckContent.txt",
    },
    "portCheckSetting": {
      "inherited": false,
      "value": {
        "443": "https",
      },
    },
    "unwantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "unwantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "wantedHttpUrlRegexParams": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoJ2EEAgentConfig": {
    "acceptIPDPCookie": {
      "inherited": false,
      "value": false,
    },
    "acceptSsoTokenDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "acceptSsoTokenEnabled": {
      "inherited": false,
      "value": false,
    },
    "authExchangeCookieName": {
      "inherited": false,
    },
    "authExchangeUri": {
      "inherited": false,
    },
    "cdssoDomainList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "/agentapp/post-authn-redirect",
    },
    "cdssoSecureCookies": {
      "inherited": false,
      "value": false,
    },
    "cookieResetDomains": {
      "inherited": false,
      "value": {},
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetNames": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetPaths": {
      "inherited": false,
      "value": {},
    },
    "encodeCookies": {
      "inherited": false,
      "value": false,
    },
    "excludedUserAgentsList": {
      "inherited": false,
      "value": [],
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "setCookieAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "setCookieInternalMap": {
      "inherited": false,
      "value": {},
    },
  },
}
`;

exports[`AgentApi putAgentByTypeAndId() 3: Put WebAgent 'FrodoTestWebAgent2' 1`] = `
{
  "_id": "FrodoTestWebAgent2",
  "_rev": "528305929",
  "_type": {
    "_id": "WebAgent",
    "collection": true,
    "name": "Web Agents",
  },
  "advancedWebAgentConfig": {
    "apacheAuthDirectives": {
      "inherited": false,
    },
    "clientHostnameHeader": {
      "inherited": false,
    },
    "clientIpHeader": {
      "inherited": false,
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "fragmentRedirectEnabled": {
      "inherited": false,
      "value": false,
    },
    "hostnameToIpAddress": {
      "inherited": false,
      "value": [],
    },
    "logonAndImpersonation": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestHost": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestPort": {
      "inherited": false,
      "value": false,
    },
    "overrideRequestProtocol": {
      "inherited": false,
      "value": false,
    },
    "pdpJavascriptRepost": {
      "inherited": false,
      "value": false,
    },
    "pdpSkipPostUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "pdpStickySessionCookieName": {
      "inherited": false,
    },
    "pdpStickySessionMode": {
      "inherited": false,
      "value": "OFF",
    },
    "pdpStickySessionValue": {
      "inherited": false,
    },
    "postDataCachePeriod": {
      "inherited": false,
      "value": 10,
    },
    "postDataPreservation": {
      "inherited": false,
      "value": false,
    },
    "replayPasswordKey": {
      "inherited": false,
    },
    "retainSessionCache": {
      "inherited": false,
      "value": false,
    },
    "showPasswordInHeader": {
      "inherited": false,
      "value": false,
    },
  },
  "amServicesWebAgent": {
    "amLoginUrl": {
      "inherited": false,
      "value": [],
    },
    "amLogoutUrl": {
      "inherited": false,
      "value": [
        "https://openam-volker-dev.forgeblocks.com:443/am/UI/Logout",
      ],
    },
    "applicationLogoutUrls": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "conditionalLoginUrl": {
      "inherited": false,
      "value": [
        "|https://openam-volker-dev.forgeblocks.com:443/am/oauth2/authorize?realm=/alpha",
      ],
    },
    "customLoginMode": {
      "inherited": false,
      "value": 0,
    },
    "enableLogoutRegex": {
      "inherited": false,
      "value": false,
    },
    "fetchPoliciesFromRootResource": {
      "inherited": false,
      "value": false,
    },
    "invalidateLogoutSession": {
      "inherited": false,
      "value": true,
    },
    "logoutRedirectDisabled": {
      "inherited": false,
      "value": false,
    },
    "logoutRedirectUrl": {
      "inherited": false,
    },
    "logoutResetCookies": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "logoutUrlRegex": {
      "inherited": false,
    },
    "policyCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "policyClockSkew": {
      "inherited": false,
      "value": 0,
    },
    "policyEvaluationApplication": {
      "inherited": false,
    },
    "policyEvaluationRealm": {
      "inherited": false,
      "value": "/alpha",
    },
    "publicAmUrl": {
      "inherited": false,
    },
    "regexConditionalLoginPattern": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "regexConditionalLoginUrl": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "retrieveClientHostname": {
      "inherited": false,
      "value": false,
    },
    "ssoCachePollingInterval": {
      "inherited": false,
      "value": 3,
    },
    "userIdParameter": {
      "inherited": false,
      "value": "UserToken",
    },
    "userIdParameterType": {
      "inherited": false,
      "value": "session",
    },
  },
  "applicationWebAgentConfig": {
    "attributeMultiValueSeparator": {
      "inherited": false,
      "value": "|",
    },
    "clientIpValidation": {
      "inherited": false,
      "value": false,
    },
    "continuousSecurityCookies": {
      "inherited": false,
      "value": {},
    },
    "continuousSecurityHeaders": {
      "inherited": false,
      "value": {},
    },
    "fetchAttributesForNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "ignorePathInfoForNotEnforcedUrls": {
      "inherited": false,
      "value": true,
    },
    "invertNotEnforcedUrls": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedIps": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedIpsRegex": {
      "inherited": false,
      "value": false,
    },
    "notEnforcedUrls": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "notEnforcedUrlsRegex": {
      "inherited": false,
      "value": false,
    },
    "profileAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "profileAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "responseAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "responseAttributeMap": {
      "inherited": false,
      "value": {},
    },
    "sessionAttributeFetchMode": {
      "inherited": false,
      "value": "NONE",
    },
    "sessionAttributeMap": {
      "inherited": false,
      "value": {},
    },
  },
  "globalWebAgentConfig": {
    "accessDeniedUrl": {
      "inherited": false,
    },
    "agentConfigChangeNotificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "agentDebugLevel": {
      "inherited": false,
      "value": "Error",
    },
    "agentUriPrefix": {
      "inherited": false,
      "value": "https://www.mytestrun.com:443/amagent",
    },
    "amLbCookieEnable": {
      "inherited": false,
      "value": false,
    },
    "auditAccessType": {
      "inherited": false,
      "value": "LOG_NONE",
    },
    "auditLogLocation": {
      "inherited": false,
      "value": "REMOTE",
    },
    "cdssoRootUrl": {
      "inherited": false,
      "value": [
        "agentRootURL=https://www.mytestrun.com:443/",
      ],
    },
    "configurationPollingInterval": {
      "inherited": false,
      "value": 60,
    },
    "disableJwtAudit": {
      "inherited": false,
      "value": false,
    },
    "fqdnCheck": {
      "inherited": false,
      "value": false,
    },
    "fqdnDefault": {
      "inherited": false,
      "value": "www.mytestrun.com",
    },
    "fqdnMapping": {
      "inherited": false,
      "value": {},
    },
    "jwtAuditWhitelist": {
      "inherited": false,
    },
    "jwtName": {
      "inherited": false,
      "value": "am-auth-jwt",
    },
    "notificationsEnabled": {
      "inherited": false,
      "value": true,
    },
    "repositoryLocation": "centralized",
    "resetIdleTime": {
      "inherited": false,
      "value": false,
    },
    "ssoOnlyMode": {
      "inherited": false,
      "value": false,
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
    "webSocketConnectionIntervalInMinutes": {
      "inherited": false,
      "value": 30,
    },
  },
  "miscWebAgentConfig": {
    "addCacheControlHeader": {
      "inherited": false,
      "value": false,
    },
    "anonymousUserEnabled": {
      "inherited": false,
      "value": false,
    },
    "anonymousUserId": {
      "inherited": false,
      "value": "anonymous",
    },
    "caseInsensitiveUrlComparison": {
      "inherited": false,
      "value": true,
    },
    "compositeAdviceEncode": {
      "inherited": false,
      "value": false,
    },
    "compositeAdviceRedirect": {
      "inherited": false,
      "value": false,
    },
    "encodeSpecialCharsInCookies": {
      "inherited": false,
      "value": false,
    },
    "encodeUrlSpecialCharacters": {
      "inherited": false,
      "value": false,
    },
    "gotoParameterName": {
      "inherited": false,
      "value": "goto",
    },
    "headerJsonResponse": {
      "inherited": false,
      "value": {},
    },
    "ignorePathInfo": {
      "inherited": false,
      "value": false,
    },
    "invalidUrlRegex": {
      "inherited": false,
    },
    "invertUrlJsonResponse": {
      "inherited": false,
      "value": false,
    },
    "mineEncodeHeader": {
      "inherited": false,
      "value": 0,
    },
    "profileAttributesCookieMaxAge": {
      "inherited": false,
      "value": 300,
    },
    "profileAttributesCookiePrefix": {
      "inherited": false,
      "value": "HTTP_",
    },
    "statusCodeJsonResponse": {
      "inherited": false,
      "value": 202,
    },
    "urlJsonResponse": {
      "inherited": false,
      "value": [
        "",
      ],
    },
  },
  "ssoWebAgentConfig": {
    "acceptSsoToken": {
      "inherited": false,
      "value": false,
    },
    "cdssoCookieDomain": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cdssoRedirectUri": {
      "inherited": false,
      "value": "agent/cdsso-oauth2",
    },
    "cookieName": {
      "inherited": false,
      "value": "iPlanetDirectoryPro",
    },
    "cookieResetEnabled": {
      "inherited": false,
      "value": false,
    },
    "cookieResetList": {
      "inherited": false,
      "value": [
        "",
      ],
    },
    "cookieResetOnRedirect": {
      "inherited": false,
      "value": false,
    },
    "httpOnly": {
      "inherited": false,
      "value": true,
    },
    "multivaluePreAuthnCookie": {
      "inherited": false,
      "value": false,
    },
    "persistentJwtCookie": {
      "inherited": false,
      "value": false,
    },
    "sameSite": {
      "inherited": false,
    },
    "secureCookies": {
      "inherited": false,
      "value": false,
    },
  },
}
`;
