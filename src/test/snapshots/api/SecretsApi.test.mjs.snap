// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecretsApi createNewVersionOfSecret() 1: Create new version of existing secret: esv-frodo-test-secret2 - success 1`] = `
{
  "createDate": "2022-12-23T03:03:03.694Z",
  "loaded": false,
  "status": "ENABLED",
  "version": "4",
}
`;

exports[`SecretsApi createNewVersionOfSecret() 2: Create new version of non-existing secret: esv-does-not-exist - error 1`] = `[AxiosError: Request failed with status code 500]`;

exports[`SecretsApi deleteSecret() 1: Delete existing secret: esv-frodo-test-secret3 - success 1`] = `
{
  "_id": "esv-frodo-test-secret3",
  "activeVersion": "",
  "description": "",
  "encoding": "generic",
  "lastChangeDate": "2022-12-23T03:02:56.681Z",
  "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
  "loaded": false,
  "loadedVersion": "",
  "useInPlaceholders": true,
}
`;

exports[`SecretsApi deleteVersionOfSecret() 1: Delete version 1 of secret: esv-frodo-test-secret2 - success 1`] = `
{
  "createDate": "2022-12-23T03:02:55.220Z",
  "loaded": false,
  "status": "DESTROYED",
  "version": "1",
}
`;

exports[`SecretsApi getSecret() 1: Get existing secret: esv-frodo-test-secret1 1`] = `
{
  "_id": "esv-frodo-test-secret1",
  "activeVersion": "3",
  "description": "Frodo Test Secret One Description",
  "encoding": "generic",
  "lastChangeDate": "2022-12-23T03:02:54.169Z",
  "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
  "loaded": false,
  "loadedVersion": "",
  "useInPlaceholders": true,
}
`;

exports[`SecretsApi getSecret() 2: Get non-existing secret: esv-does-not-exist 1`] = `[AxiosError: Request failed with status code 404]`;

exports[`SecretsApi getSecretVersions() 1: Get versions of existing secret: esv-frodo-test-secret1 1`] = `
[
  {
    "createDate": "2022-12-23T03:02:53.492Z",
    "loaded": false,
    "status": "ENABLED",
    "version": "3",
  },
  {
    "createDate": "2022-12-23T03:02:52.951Z",
    "loaded": false,
    "status": "DISABLED",
    "version": "2",
  },
  {
    "createDate": "2022-12-23T03:02:52.572Z",
    "loaded": false,
    "status": "ENABLED",
    "version": "1",
  },
]
`;

exports[`SecretsApi getSecretVersions() 2: Get versions of non-existing secret: esv-does-not-exist 1`] = `[AxiosError: Request failed with status code 404]`;

exports[`SecretsApi getSecrets() 1: Get all secrets - success 1`] = `
{
  "pagedResultsCookie": null,
  "remainingPagedResults": -1,
  "result": [
    {
      "_id": "esv-admin-token",
      "activeVersion": "1",
      "description": "Long-lived admin token. Expires: Friday, January 16, 2032 9:45:14 PM GMT-06:00",
      "encoding": "generic",
      "lastChangeDate": "2022-04-08T13:19:59.266Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-shhhh",
      "activeVersion": "1",
      "description": "Don't tell!",
      "encoding": "generic",
      "lastChangeDate": "2022-03-23T13:11:54.891Z",
      "lastChangedBy": "acbce6e2-012f-4d67-9339-e8caf15ac164",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-hibp-api-key",
      "activeVersion": "1",
      "description": "Have I Been Pwned API key. Get your own at: https://haveibeenpwned.com",
      "encoding": "generic",
      "lastChangeDate": "2022-08-12T21:21:18.423Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-frodo-test-secret1",
      "activeVersion": "3",
      "description": "Frodo Test Secret One Description",
      "encoding": "generic",
      "lastChangeDate": "2022-12-23T03:02:54.169Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": false,
      "loadedVersion": "",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-onfido-api-token",
      "activeVersion": "1",
      "description": "Onfido API token. Get your own at: https://onfido.com",
      "encoding": "generic",
      "lastChangeDate": "2022-08-12T21:18:51.938Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-twilio-api-token",
      "activeVersion": "1",
      "description": "Twilio API token. Get your own at: https://twilio.com",
      "encoding": "generic",
      "lastChangeDate": "2022-08-12T21:29:20.886Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-ipqs-api-key",
      "activeVersion": "1",
      "description": "IPQualityScore API key. Get your own at: https://ipqualityscore.com",
      "encoding": "generic",
      "lastChangeDate": "2022-08-11T18:43:08.852Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": true,
      "loadedVersion": "1",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-frodo-test-secret3",
      "activeVersion": "1",
      "description": "Frodo Test Secret Three Description",
      "encoding": "generic",
      "lastChangeDate": "2022-12-23T03:02:56.681Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": false,
      "loadedVersion": "",
      "useInPlaceholders": true,
    },
    {
      "_id": "esv-frodo-test-secret2",
      "activeVersion": "3",
      "description": "Frodo Test Secret Two Description",
      "encoding": "generic",
      "lastChangeDate": "2022-12-23T03:02:56.147Z",
      "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
      "loaded": false,
      "loadedVersion": "",
      "useInPlaceholders": true,
    },
  ],
  "resultCount": 9,
  "totalPagedResults": -1,
  "totalPagedResultsPolicy": "NONE",
}
`;

exports[`SecretsApi getVersionOfSecret() 1: Get version 2 of existing secret: esv-frodo-test-secret1 1`] = `
{
  "createDate": "2022-12-23T03:02:52.951Z",
  "loaded": false,
  "status": "DISABLED",
  "version": "2",
}
`;

exports[`SecretsApi getVersionOfSecret() 2: Get version 2 of non-existing secret: esv-does-not-exist 1`] = `[AxiosError: Request failed with status code 500]`;

exports[`SecretsApi putSecret() 1: Create secret: esv-frodo-test-secret4 - success 1`] = `
{
  "_id": "esv-frodo-test-secret4",
  "activeVersion": "",
  "description": "Frodo Test Secret Four Description",
  "encoding": "generic",
  "lastChangeDate": "2022-12-23T03:02:58.816Z",
  "lastChangedBy": "c5f3cf35-4cc1-42f9-80b3-59e1ca842510",
  "loaded": false,
  "loadedVersion": "",
  "useInPlaceholders": true,
}
`;

exports[`SecretsApi setSecretDescription() 1: Set existing secret's description: esv-frodo-test-secret2 - success 1`] = `""`;

exports[`SecretsApi setStatusOfVersionOfSecret() 1: Disable version 2 of existing secret: esv-frodo-test-secret2 - success 1`] = `
{
  "createDate": "2022-12-23T03:02:55.644Z",
  "loaded": false,
  "status": "DISABLED",
  "version": "2",
}
`;

exports[`SecretsApi setStatusOfVersionOfSecret() 2: Disable version 2 of non-existing secret: esv-does-not-exist - error 1`] = `[AxiosError: Request failed with status code 404]`;
